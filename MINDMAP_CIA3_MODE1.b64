<!DOCTYPE html><html lang="vi"><head>    <meta charset="UTF-8">    <meta name="viewport" content="width=device-width, initial-scale=1.0">    <title>CIA3 INTERNAL AUDIT FUNCTION</title>    <style>        /* --- Cài đặt Chung --- */        * { margin: 0; padding: 0; box-sizing: border-box; }        body, html { height: 100%; width: 100%; overflow: hidden; }        body {            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);            padding: 15px;            display: flex;            flex-direction: column;        }        /* --- Phần Header --- */        .header {            display: flex;            /* THAY ĐỔI QUAN TRỌNG: Xếp các mục theo chiều dọc (trên-dưới) */            flex-direction: column;             justify-content: center; /* Căn giữa */            align-items: center; /* Căn giữa */            flex-shrink: 0;            padding: 20px 15px; /* Tăng padding một chút cho thoáng */            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);            color: white;         }                .header h1 {            display: block;             font-size: 1.5em; /* Kích thước tiêu đề */            margin-bottom: 15px; /* Khoảng cách với nút bên dưới */            text-align: center;        }               /* Ẩn thẻ p không cần thiết đi */        .header p {           display: none;        }        /* --- Style cho nút CTA --- */        .call-to-action-button {            display: inline-flex;            align-items: center;            justify-content: center;            /* THAY ĐỔI: Giảm padding để thu nhỏ nút */            padding: 5px 12px;             background-color: #FF9800;            color: white;            text-decoration: none;            font-weight: bold;            /* THAY ĐỔI: Giảm cỡ chữ */            font-size: 0.75em;             /* THAY ĐỔI: Giảm độ bo tròn cho cân đối hơn */            border-radius: 6px;             /* THAY ĐỔI: Giảm hiệu ứng bóng đổ */            box-shadow: 0 2px 8px rgba(255, 152, 0, 0.3);            transition: all 0.3s ease;            cursor: pointer;            text-transform: uppercase;            letter-spacing: 0.5px;            /* THAY ĐỔI: Giảm độ dày viền */            border: 1px solid #e68900;         }        .call-to-action-button:hover {            background-color: #e68900;            /* THAY ĐỔI: Giảm hiệu ứng bóng đổ khi hover */            box-shadow: 0 3px 10px rgba(255, 152, 0, 0.5);             /* THAY ĐỔI: Giảm hiệu ứng nhấc lên */            transform: translateY(-1px);         }        /* --- Container chính cho Mindmap SVG --- */        #mindmap-container {            flex-grow: 1;            background: white;            border-radius: 15px;            box-shadow: 0 20px 60px rgba(0,0,0,0.3);            overflow: hidden;            cursor: grab;            position: relative;        }        #mindmap-container:active { cursor: grabbing; }        #mindmap-svg {            display: block;            width: 100%;            height: 100%;        }        /* --- Định dạng các Phần tử SVG --- */        .branch-line {            fill: none;            stroke-linecap: round;            transition: all 0.4s ease-in-out;        }        .node {            cursor: pointer;            transition: all 0.4s ease-in-out;        }        .node.is-leaf { cursor: default; }        .node:not(.is-leaf):hover .node-rect {            transform: scale(1.05);            filter: brightness(0.95);        }                .node-rect {            stroke-width: 1.5px;            rx: 25; ry: 25;            transition: all 0.4s ease-in-out;            filter: drop-shadow(0px 4px 6px rgba(0,0,0,0.1));        }                .node-foreign-object {            pointer-events: none;            user-select: none;            overflow: visible;        }        .node-text-wrapper {            display: flex;            justify-content: center;            align-items: center;            text-align: left;            height: 100%;            padding: 8px;            font-size: 13px;            line-height: 1.35;            font-weight: 500;            color: white;            word-wrap: break-word;        }        .node.central .node-rect { stroke-width: 3px; }        .node.central .node-text-wrapper { font-size: 18px; font-weight: bold; }                .hidden {            opacity: 0;            pointer-events: none;            transform: scale(0.5);        }        .info {            position: absolute; bottom: 10px; right: 15px; background: rgba(0,0,0,0.7);            color: white; padding: 8px 12px; border-radius: 5px; font-size: 12px; pointer-events: none;        }    </style></head><body>    <div class="header">        <h1>CIA3 -- Internal Audit Function</h1>        <a href="https://www.longnguyencia.com/p/gioi-thieu-lop-hoc.html" target="_blank" class="call-to-action-button">            Tìm hiểu về Khóa học CIA ONLINE        </a>    </div>    <div id="mindmap-container">        <svg id="mindmap-svg"></svg>        <div class="info">@LongNguyenCIA | Lăn chuột để phóng to thu nhỏ, Click để chọn, Click giữ và kéo để di chuyển map</div>    </div>    <script>    /* --- PHẦN 1: DỮ LIỆU THÔ --- */    const rawData = `
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.0 Study Unit One Internal Audit Function -- learning objectives / 1.0 Study Unit One Internal Audit Function -- learning objectives / Internal Audit Planning and Execution/● Audit Operations  ● Manage Resources
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.0 Study Unit One Internal Audit Function -- learning objectives / 1.0 Study Unit One Internal Audit Function -- learning objectives / Internal Audit Responsibilities and Access/● Assurance & Advice  ● Access Resources
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.0 Study Unit One Internal Audit Function -- learning objectives / 1.0 Study Unit One Internal Audit Function -- learning objectives / Internal Audit Strategic Operational Administrative Roles/● Audit Function  ● CAE Responsibilities  ● Manage Resources
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.0 Study Unit One Internal Audit Function -- learning objectives / 1.0 Study Unit One Internal Audit Function -- learning objectives / Effective Internal Audit Resources/● Resource Appreciation  ● Effective Performance
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.1 Introduction to Internal Auditing / 1.1 Introduction to Internal Auditing / Internal Audit Role and Responsibilities/● Audit Aspects  ● CAE Role  ● Update Methods  ● Document Policies  ● Effective Duties
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.1 Introduction to Internal Auditing / 1.1 Introduction to Internal Auditing / CAE Responsibility and IA Monitoring/● CAE Responsibility  ● Monitoring Operations  ● CAE Delegation
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.1 Introduction to Internal Auditing / 1.1 Introduction to Internal Auditing / Ongoing Monitoring in Internal Auditing/● Standards address
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.1 Introduction to Internal Auditing / 1.1 Introduction to Internal Auditing / Internal Audit Methodologies Requirements/● Establish Methodologies  ● Evaluate & Update
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.1 Introduction to Internal Auditing / 1.1 Introduction to Internal Auditing / Internal Audit Quality Assessment Requirements/● Internal Assessment
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.1 Introduction to Internal Auditing / 1.1 Introduction to Internal Auditing / Ongoing Monitoring of Internal Audit/● Daily Oversight  ● Policy Inclusion
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.1 Introduction to Internal Auditing / 1.1 Introduction to Internal Auditing / Monitoring Internal Audit Efficiency/● Audit compliance  ● Stakeholder feedback  ● Resource metrics
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.1 Introduction to Internal Auditing / 1.1.1 Nature of the Work of the Internal Audit Function / IA's Role in Governance Risk and Control/● Achieve Objectives  ● Connected Processes  ● Governance  ● Risk management  ● Control processes
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.1 Introduction to Internal Auditing / 1.1.1 Nature of the Work of the Internal Audit Function / CAE Stakeholder Interviews/● CAE Interviews
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.1 Introduction to Internal Auditing / 1.1.1 Nature of the Work of the Internal Audit Function / Understanding the Organization and Frameworks for Audit/● Understand Organization  ● Use Frameworks  ● Framework Adoption  ● CAE Review
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.1 Introduction to Internal Auditing / 1.1.1 Nature of the Work of the Internal Audit Function / Internal Audit Charter Roles/● Charter roles
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.1 Introduction to Internal Auditing / 1.1.1 Nature of the Work of the Internal Audit Function / IA Strategy for Governance Risk Control Assessment/● Process maturity  ● Seniority responsible  ● Org culture
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.1 Introduction to Internal Auditing / 1.1.1 Nature of the Work of the Internal Audit Function / Internal Auditor Findings and Recommendations/● Auditor Knowledge
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.1 Introduction to Internal Auditing / 1.1.1 Nature of the Work of the Internal Audit Function / Internal Audit's Compliance Focus/● Mindful Compliance  ● Define Compliance  ● Evaluate Risks
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.1 Introduction to Internal Auditing / 1.1.2 Reasonable Assurance / Reasonable Assurance in Internal Auditing/● Adequate Processes  ● Efficient   ● Economical   ● Cost-Effective Controls
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.1 Introduction to Internal Auditing / 1.1.2 Reasonable Assurance / IIA Adequate vs Sufficient Terminology/● IIA Adequate  ● Prefer Adequate
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.1 Introduction to Internal Auditing / 1.1.3 Optimizing Resources between Assurance and Advisory Engagements / Assurance vs Advisory Mandate/● Audit Services  ● Finding Balance
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.1 Introduction to Internal Auditing / 1.1.3 Optimizing Resources between Assurance and Advisory Engagements / Assurance Versus Advisory Resource Allocation/● Resource needs  ● Limited resources
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.1 Introduction to Internal Auditing / 1.1.3 Optimizing Resources between Assurance and Advisory Engagements / Balancing Assurance and Advisory Engagements/● CAE Balance  ● Annual Budget  ● Stakeholder Needs
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.1 Introduction to Internal Auditing / 1.1.3 Optimizing Resources between Assurance and Advisory Engagements / Advisory Services/● Consulting Guidance  ● Service Agreement  ● Other Services  ● Implementation Help
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.1 Introduction to Internal Auditing / 1.1.3 Optimizing Resources between Assurance and Advisory Engagements / Assurance Services/● Check operations  ● Service examples  ● Assurance levels
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.1 Introduction to Internal Auditing / 1.1.4 Catalysts for Revising Internal Audit Methodologies / Revising Internal Audit Methodologies/● Evaluate Effectiveness  ● Revise Methodologies
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.1 Introduction to Internal Auditing / 1.1.4 Catalysts for Revising Internal Audit Methodologies / Catalysts for Revising Audit Methodologies/● Standards Change  ● External Factors  ● Leadership Change
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.1 Introduction to Internal Auditing / 1.1.4 Catalysts for Revising Internal Audit Methodologies / Documenting Changes to Audit Methodologies/● Document Changes
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.1 Introduction to Internal Auditing / 1.1.4 Catalysts for Revising Internal Audit Methodologies / Revising Audit Methodologies Strategy Objectives/● Strategy Changes  ● Identify Changes  ● Review Performance  ● Improve ERM
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.1 Introduction to Internal Auditing / 1.1.4 Catalysts for Revising Internal Audit Methodologies / Changes Affecting Strategy and Objectives/● Identify Changes  ● Business Context  ● Internal/External
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.1 Introduction to Internal Auditing / 1.1.4 Catalysts for Revising Internal Audit Methodologies / Performance Results and Risk Considerations/● Performance Deviation  ● Review Questions
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.1 Introduction to Internal Auditing / 1.1.4 Catalysts for Revising Internal Audit Methodologies / ERM Improvement and Internal Audit/● Pursue ERM  ● Continual ERM Improvement
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.1 Introduction to Internal Auditing / 1.1.5 Importance of Reporting on the Internal Audit Function / Reporting Importance for Internal Audit Function/● Feedback loop  ● Assurance governance  ● Assurance risk  ● Assurance control
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.1 Introduction to Internal Auditing / 1.1.5 Importance of Reporting on the Internal Audit Function / Internal Audit Function Periodic Reporting/● Periodic reports  ● Purpose, Authority, Responsibility  ● Performance
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.1 Introduction to Internal Auditing / 1.1.6 Internal Audit Administrative Activities / CAE Role and Internal Audit Administration/● CAE Responsibility  ● Effective Operation  ● CAE Administration
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.1 Introduction to Internal Auditing / 1.1.7 Responsibility for Internal Audit Administrative Activities / Internal Audit Administrative Activities/● Budget Creation  ● Staff Qualification  ● Resource Allocation  ● Communication Findings  ● Time Budgets  ● Staff Evaluation
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.1 Introduction to Internal Auditing / 1.1.7 Responsibility for Internal Audit Administrative Activities / Standard 9.3 Internal Audit Methodologies/● CAE Responsibility  ● Provide Training
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.1 Introduction to Internal Auditing / 1.1.7 Responsibility for Internal Audit Administrative Activities / Internal Audit Methodologies Implementation 1/● Methodology Variation  ● Document Types
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.1 Introduction to Internal Auditing / 1.1.7 Responsibility for Internal Audit Administrative Activities / Internal Audit Methodologies Implementation 2/● Methodologies Support  ● Describe Processes
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.1 Introduction to Internal Auditing / 1.1.8 Policies and Procedures / Documenting Internal Audit Policies and Procedures/● Document Guidance
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.1 Introduction to Internal Auditing / 1.1.8 Policies and Procedures / Internal Audit Policies and Procedures Detail/● Large Audit Function  ● Smaller Audit Activity  ● Very Small Function
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.1 Introduction to Internal Auditing / 1.1.8 Policies and Procedures / Policies Procedures Guidance and Management Inclusion/● Operations Manual  ● Policies Defined  ● Procedures Defined  ● Guidance Defined  ● Management Defined
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.1 Introduction to Internal Auditing / 1.1.8 Policies and Procedures / Internal Audit Function Policies Coverage/● Audit Purpose  ● Guidance Compliance  ● Audit Independence  ● Ethics Policy  ● Confidential Info  ● Record Retention
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.1 Introduction to Internal Auditing / 1.1.8 Policies and Procedures / Internal Audit Procedures Guide Requirements/● Audit plan  ● Engagement plans  ● Performing work  ● Communicating results  ● Monitoring follow-up
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.1 Introduction to Internal Auditing / 1.1.8 Policies and Procedures / Quality Assurance Improvement Program Guidance/● Quality Assurance Program
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.1 Introduction to Internal Auditing / 1.1.8 Policies and Procedures / Auditor Training and Evaluation Management/● Training/Certify  ● Continuing Education  ● Regular Evaluations
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.1 Introduction to Internal Auditing / 1.1.8 Policies and Procedures / Reviewing Internal Audit Policies and Procedures/● Periodic review  ● CAE Review
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / Managing Resources in Internal Audit/● Financial Management  ● Human Resources  ● Tech Resources
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.1 Financial Resources / CAE's Financial Resource Management Role/● CAE responsibility
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.1 Financial Resources / Internal Audit Financial Resource Management/● Manage Finances  ● Budgeting Required
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.1 Financial Resources / Standard 10.1 Financial Resource Management Requirements 1/● Manage Finances
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.1 Financial Resources / Standard 10.1 Financial Resource Management Requirements 2/● Develop Budget  ● Budget Resources  ● Manage Activities
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.1 Financial Resources / Standard 10.1 Financial Resource Management Requirements 3/● Budget Approval  ● Report Shortfall
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.1 Financial Resources / Internal Audit Function Budget Process/● Budget Development  ● Budget Review
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.1 Financial Resources / Internal Audit Budget Approval and Control/● Adequate Budget  ● Justify Adjustments  ● Monitor Budgets
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.2 Purposes of a Budget / The Budget Is/● Budget as Plan  ● Budget as Control  ● Budget as Motivator  ● Budget Communication Tool
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.2 Purposes of a Budget / Internal Audit Budget Objectives/● Resource Allocation  ● Effective Responsibilities
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.2 Purposes of a Budget / Budgeting for Resources and Technology/● Human Resources  ● Technology Needs
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.2 Purposes of a Budget / Key Steps in the Budget Process/● Define scope  ● Resource analysis  ● Identify components  ● Estimate costs  ● Develop budget  ● Review approvals  ● Implement, monitor
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.2 Purposes of a Budget / Annual and Engagement Budgets/● Budget Creation
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.3 Human Resources / Internal Auditor Skill Set Importance/● Auditor skills  ● Achieve Goals
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.3 Human Resources / Human Resources Management Requirements/● Recruit Auditors  ● Implement Strategy  ● Achieve Plan
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.3 Human Resources / IA Function Human Resources Management 1/● HR Adequacy
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.3 Human Resources / IA Function Human Resources Management 2/● Org Characteristics  ● Audit Budget  ● Resource Options
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.3 Human Resources / Recruiting Competent Internal Auditors Approach/● Job specifications  ● Diverse backgrounds  ● Recruitment activities
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.3 Human Resources / HR Department Manages Hiring Process/● HR hiring
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.3 Human Resources / Auditor Competence and Staff Selection/● Auditor Competence  ● Selection Criteria  ● Evaluate Applicants
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.3 Human Resources / Effective Interviewing Methods in Internal Audit/● Effective Interviews  ● Acquire Skills
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.3 Human Resources / Effective Interviewing Structured and Behavioral/● Interview Methods
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.3 Human Resources / Structured Interviews in Internal Auditing/● Remove biases  ● Standard questions  ● Question types
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.3 Human Resources / Behavioral Interviews Predict Future Performance/● Interview behaviors  ● Past predicts
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.4 Selecting Internal Auditors for Engagements / Employee Selection Based on Job Specifications/● Job Specifications  ● Selection Requirements  ● Verify Information
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.4 Selecting Internal Auditors for Engagements / Internal Auditor Selection Process Steps/● Job descriptions  ● Interview questions  ● Interviewer roles  ● Collect information  ● Evaluate applicants  ● Discuss applicants  ● Offer employment
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.4 Selecting Internal Auditors for Engagements / Internal Audit Roles and Responsibilities/● Audit Director  ● Senior Managers  ● Senior/Staff Auditors  ● Specialist Auditors
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.5 Training and Development / Internal Audit Training and Development Strategies/● Support Achievement  ● Improve Competencies  ● Knowledge Sharing  ● Ethical Environment
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.5 Training and Development / Internal Audit Training Methods Overview/● Training Definition  ● On-the-Job  ● Off-the-Job  ● Computer Training
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.5 Training and Development / Internal Audit Development Programs/● Future tasks  ● Human skills
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.5 Training and Development / Effective Training and Development Model/● Job Application  ● Learning Model
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.5 Training and Development / Performance Evaluation for Training and Development/● Identify strengths weaknesses  ● Jobs change skills  ● Lifelong learning benefits  ● Evaluation fosters growth
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.6 Performance Evaluation and Objectives / Performance Objectives Drive Achievement/● Goal Achievement
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.6 Performance Evaluation and Objectives / Characteristics of Internal Audit Performance Evaluation 1/● Importance evaluation  ● Identify performance  ● Build strengths  ● Compensation factor  ● Separate evaluation
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.6 Performance Evaluation and Objectives / Characteristics of Internal Audit Performance Evaluation 2/● Delayed Motivation  ● Identify Promotable  ● Internal Promotions  ● External Candidates
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.7 Management Methodologies to Enhance the Internal Audit Function / Enhancing Internal Audit Function Management Methodologies/● Professional Environment  ● Management Methods
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.7 Management Methodologies to Enhance the Internal Audit Function / Job Design and Satisfaction/● Tasks to Jobs  ● Motivational Research  ● Increase Productivity
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.7 Management Methodologies to Enhance the Internal Audit Function / Job Rotation as a Job Design Technique/● Job rotation  ● Cross-training benefit  ● Adapt people to jobs  
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.7 Management Methodologies to Enhance the Internal Audit Function / Job Enlargement and Enrichment/● Adapt Jobs to the people  ● Job Enlargement  ● Job Enrichment  ● Improve Motivation
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.7 Management Methodologies to Enhance the Internal Audit Function / Job Enrichment in Internal Audit/● Skills Variety  ● Importance Communication  ● Autonomy Level  ● Feedback Provision  ● Training Opportunities
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.7 Management Methodologies to Enhance the Internal Audit Function / Job Design for Audit Performance/● Increase Motivation  ● High Performance  ● Reduce Turnover
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.7 Management Methodologies to Enhance the Internal Audit Function / Motivate & Rewards/● Motivation Factors  ● Rewards Motivation
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.7 Management Methodologies to Enhance the Internal Audit Function / Extrinsic Rewards/● Given by others  ● Financial incentives  ● Social recognition  ● One-time appreciation  ● Motivation by fear
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.7 Management Methodologies to Enhance the Internal Audit Function / Intrinsic Rewards/● Internal Satisfaction  ● Exploit Anxieties
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.7 Management Methodologies to Enhance the Internal Audit Function / Work-Life Stress Affects Audit Performance/● Job Stress  ● Affects Performance
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.7 Management Methodologies to Enhance the Internal Audit Function / Work Schedule Flexibility Boosts Motivation/● Flexible schedules  ● Childcare, appointments  ● Flex hours, WFH
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.7 Management Methodologies to Enhance the Internal Audit Function / Work Schedules and Internal Audit Enhancement/● Fair Treatment  ● Audit Enhancement
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.7 Management Methodologies to Enhance the Internal Audit Function / Mentoring for Internal Audit Leadership/● Leadership development  ● Intensive support
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.7 Management Methodologies to Enhance the Internal Audit Function / Formal Mentoring Programs/● Formal Programs  ● Assign Mentors
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.7 Management Methodologies to Enhance the Internal Audit Function / Informal Voluntary Mentoring Results/● Informal Mentoring  ● Voluntary Participation  ● Better Outcomes
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.7 Management Methodologies to Enhance the Internal Audit Function / Mentoring Career and Personal Growth/● Career Growth  ● Personal Development  ● Broadly Beneficial
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.7 Management Methodologies to Enhance the Internal Audit Function / Internal Audit Mentorship Programs/● On-the-job learning
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.7 Management Methodologies to Enhance the Internal Audit Function / Constructive Employee Feedback/● Positive motivator  ● Specific, tied  ● Positive, improvement
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.7 Management Methodologies to Enhance the Internal Audit Function / Goals as Motivators/● Specific results  ● Continuous effort  ● Action plans
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.7 Management Methodologies to Enhance the Internal Audit Function / Constructive Feedback Enhances Performance/● Goal Progress
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.7 Management Methodologies to Enhance the Internal Audit Function / Constructive Feedback for Internal Auditors/● Feedback Opportunities  ● Supervisory Reviews  ● Quality Assessments
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.8 Technological Resources / CAE's Role in Technology Resources/● CAE Technology
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.8 Technological Resources / Internal Audit Tech Resource Requirements/● Tech Support  ● Evaluate Tech
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.8 Technological Resources / Tech Improves Audit Efficiency/● Use Technology  ● Audit Systems  ● Process Mapping  ● Data Analytics  ● Communication Tools
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.8 Technological Resources / CAE's Tech Limitation Reporting/● Tech issues reporting
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.8 Technological Resources / Budget Constraints in Tech Acquisition/● Tech Feasibility
Section A. Internal Audit Operation (25%)/SU1: Internal Audit Function/1.2 Managing Financial, Human, and IT Resources Within the Internal Audit Function / 1.2.8 Technological Resources / Key Considerations for Tech Resources/● Hardware needs  ● Software needs  ● Data needed  ● Legal compliance  ● Staff training  ● Software support  ● System integration  ● Scalability considered
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.0 Study Unit Two Internal Audit Strategy and Communication -- learning objectives / 2.0 Study Unit Two Internal Audit Strategy and Communication -- learning objectives / Internal Audit Operations Management/● Audit Operations  ● Align Strategy  ● CAE Responsibilities
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.0 Study Unit Two Internal Audit Strategy and Communication -- learning objectives / 2.0 Study Unit Two Internal Audit Strategy and Communication -- learning objectives / Internal Audit Value and Processes/● Add Value  ● Evaluating Effectiveness  ● Core Audit Activities
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.0 Study Unit Two Internal Audit Strategy and Communication -- learning objectives / 2.0 Study Unit Two Internal Audit Strategy and Communication -- learning objectives / Internal Audit Strategy and Alignment/● Strategic Alignment  ● CAE Responsibilities  ● Stakeholder Relations
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.1 Aligning Internal Audit Strategy to Stakeholder Expectations / 2.1 Aligning Internal Audit Strategy to Stakeholder Expectations / Internal Audit Strategy and Organizational Objectives/● Understanding Strategy  ● Effective Contribution  ● Performing Duties  
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.1 Aligning Internal Audit Strategy to Stakeholder Expectations / 2.1 Aligning Internal Audit Strategy to Stakeholder Expectations / Internal Audit Purpose Statement/● Audit Purpose  ● Strategic Planning
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.1 Aligning Internal Audit Strategy to Stakeholder Expectations / 2.1 Aligning Internal Audit Strategy to Stakeholder Expectations / Principle 9 Plan Strategically/● Strategic Planning
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.1 Aligning Internal Audit Strategy to Stakeholder Expectations / 2.1 Aligning Internal Audit Strategy to Stakeholder Expectations / Internal Audit Strategy and Stakeholder Expectations/● Audit Contribution  ● Audit Strategy
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.1 Aligning Internal Audit Strategy to Stakeholder Expectations / 2.1 Aligning Internal Audit Strategy to Stakeholder Expectations / Internal Audit Strategy Standard 9.2/● Standard 9.2
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.1 Aligning Internal Audit Strategy to Stakeholder Expectations / 2.1 Aligning Internal Audit Strategy to Stakeholder Expectations / Internal Audit Strategy Requirements/● Develop Strategy  ● Long-term plan  ● Strategy components  ● Fulfill purpose
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.1 Aligning Internal Audit Strategy to Stakeholder Expectations / 2.1 Aligning Internal Audit Strategy to Stakeholder Expectations / Organization Strategy/● Long-term plan  ● Resource allocation  ● Competitive advantage, highest-level goals
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.1 Aligning Internal Audit Strategy to Stakeholder Expectations / 2.1 Aligning Internal Audit Strategy to Stakeholder Expectations / Internal Audit Strategy and Goals/● Strategy Definition  ● Long-Term Focus
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.1 Aligning Internal Audit Strategy to Stakeholder Expectations / 2.1 Aligning Internal Audit Strategy to Stakeholder Expectations / Internal Audit Strategy and Mandate/● Audit Mandate  ● Understand Governance, Risk management, and Control processes
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.1 Aligning Internal Audit Strategy to Stakeholder Expectations / 2.1 Aligning Internal Audit Strategy to Stakeholder Expectations / IA Strategy and Stakeholder Expectations/● Business strategy  ● Risk management  ● Stakeholder expectations
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.1 Aligning Internal Audit Strategy to Stakeholder Expectations / 2.1 Aligning Internal Audit Strategy to Stakeholder Expectations / Internal Audit Vision/● Future State  ● Inspire Improvement
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.1 Aligning Internal Audit Strategy to Stakeholder Expectations / 2.1 Aligning Internal Audit Strategy to Stakeholder Expectations / Internal Audit Purpose and Mission/● Enhance Value  ● Purpose = Mission
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.1 Aligning Internal Audit Strategy to Stakeholder Expectations / 2.1 Aligning Internal Audit Strategy to Stakeholder Expectations / Internal Audit Strategic Objectives/● Measurable goals
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.1 Aligning Internal Audit Strategy to Stakeholder Expectations / 2.1.1 Mission vs. Vision / Internal Audit Mission Explained/● Mission vs Vision  ● Mission: Reason  ● Framework: Strategy
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.1 Aligning Internal Audit Strategy to Stakeholder Expectations / 2.1.1 Mission vs. Vision / Mission Versus Vision Statements/● Current Goals  ● Future Aspirations
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.1 Aligning Internal Audit Strategy to Stakeholder Expectations / 2.1.1 Mission vs. Vision / Mission Statement and Objectives/● Achieve vision  ● Define purpose  ● Describe achieve
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.1 Aligning Internal Audit Strategy to Stakeholder Expectations / 2.1.1 Mission vs. Vision / Vision Statement/● Future Focus  ● Inspiration Source  ● Future Goals
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.1 Aligning Internal Audit Strategy to Stakeholder Expectations / 2.1.1 Mission vs. Vision / Mission Vision and Business Objectives Alignment/● Support mission  ● Achieve strategy
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.1 Aligning Internal Audit Strategy to Stakeholder Expectations / 2.1.1 Mission vs. Vision / SWOT Analysis for Internal Audit Strategy 1/● SWOT Analysis
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.1 Aligning Internal Audit Strategy to Stakeholder Expectations / 2.1.1 Mission vs. Vision / SWOT Analysis for Internal Audit Strategy 2/● SWOT Strategy  ● Internal Factors
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.1 Aligning Internal Audit Strategy to Stakeholder Expectations / 2.1.1 Mission vs. Vision / Internal Audit Strengths and Weaknesses Assessment/● Internal Environment  ● Core Competencies
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.1 Aligning Internal Audit Strategy to Stakeholder Expectations / 2.1.1 Mission vs. Vision / Internal Audit Opportunities and Threats Analysis/● Industry Trends  ● Resource Threat  ● Success Opportunity
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.1 Aligning Internal Audit Strategy to Stakeholder Expectations / 2.1.1 Mission vs. Vision / Gap Analysis for Internal Audit Strategy/● Strategy Creation
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.1 Aligning Internal Audit Strategy to Stakeholder Expectations / 2.1.1 Mission vs. Vision / Prioritizing and Assigning Target Dates/● Prioritize Actions  ● Assign Dates
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.1 Aligning Internal Audit Strategy to Stakeholder Expectations / 2.1.1 Mission vs. Vision / Documenting the Internal Audit Strategy/● Well documented
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.1 Aligning Internal Audit Strategy to Stakeholder Expectations / 2.1.2 Integrating Resource Planning with Audit Strategy / Audit Activities Resource Sufficiency/● Sufficient Resources  ● Meet Expectations
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.1 Aligning Internal Audit Strategy to Stakeholder Expectations / 2.1.2 Integrating Resource Planning with Audit Strategy / Internal Audit Resource Planning/● Audit Universe  ● Risk & Plan  ● Coverage & Activities
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.1 Aligning Internal Audit Strategy to Stakeholder Expectations / 2.1.2 Integrating Resource Planning with Audit Strategy / CAE Effective Resource Deployment/● Effective deployment  ● Resourcing approach
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.1 Aligning Internal Audit Strategy to Stakeholder Expectations / 2.1.2 Integrating Resource Planning with Audit Strategy / IA Strategy and Resource Planning/● Resource Action  ● CAE Manages
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.1 Aligning Internal Audit Strategy to Stakeholder Expectations / 2.1.2 Integrating Resource Planning with Audit Strategy / Principle 10 Manage Resources/● Manage Strategy  ● Obtain Resources  ● Deploy Methodologies
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.1 Aligning Internal Audit Strategy to Stakeholder Expectations / 2.1.2 Integrating Resource Planning with Audit Strategy / Internal Audit Strategy Initiatives/● Competency Development  ● Innovative Technology  ● Improve Performance
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.1 Aligning Internal Audit Strategy to Stakeholder Expectations / 2.1.3 Drivers for Internal Audit Strategy Revision / Reviewing and Monitoring Internal Audit Strategy/● Review strategy  ● Monitor implementation
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.1 Aligning Internal Audit Strategy to Stakeholder Expectations / 2.1.3 Drivers for Internal Audit Strategy Revision / Internal Audit Strategy Reviews/● Strategy reviews
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.1 Aligning Internal Audit Strategy to Stakeholder Expectations / 2.1.3 Drivers for Internal Audit Strategy Revision / Drivers for Internal Audit Strategy Revision 1/● Ops Strategy  ● Corp Structure  ● Industry Growth  ● Governance, Risk, Control  ● Policies Procs
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.1 Aligning Internal Audit Strategy to Stakeholder Expectations / 2.1.3 Drivers for Internal Audit Strategy Revision / Drivers for Internal Audit Strategy Revision 2/● Legal changes  ● Leadership changes  ● Stakeholder changes  ● Standards updates
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.1 Aligning Internal Audit Strategy to Stakeholder Expectations / 2.1.3 Drivers for Internal Audit Strategy Revision / Drivers for Internal Audit Strategy Revision 3/● IA Assessments  ● Improve Mission
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.2 Chief Audit Executive’s Responsibilities for Communicating with Senior Management and the Board / 2.2 Chief Audit Executive’s Responsibilities for Communicating with Senior Management and the Board / Internal Audit Communication and Relationships/● Communication Importance  ● Build Trust  ● Effective Communication
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.2 Chief Audit Executive’s Responsibilities for Communicating with Senior Management and the Board / 2.2 Chief Audit Executive’s Responsibilities for Communicating with Senior Management and the Board / IA Communication Importance/● Reach goals  ● Add value
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.2 Chief Audit Executive’s Responsibilities for Communicating with Senior Management and the Board / 2.2 Chief Audit Executive’s Responsibilities for Communicating with Senior Management and the Board / Communication with Board and Management/● Strong Relationships
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.2 Chief Audit Executive’s Responsibilities for Communicating with Senior Management and the Board / 2.2.1 Building Relationships / Building Relationships for Communication/● Build trust  ● CAE responsible  ● Key stakeholders  ● Continuous focus
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.2 Chief Audit Executive’s Responsibilities for Communicating with Senior Management and the Board / 2.2.1 Building Relationships / Building Relationships and Communicating with Stakeholders Requirements/● Build Relationships
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.2 Chief Audit Executive’s Responsibilities for Communicating with Senior Management and the Board / 2.2.1 Building Relationships / CAE Communication with Leadership/● CAE oversight
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.2 Chief Audit Executive’s Responsibilities for Communicating with Senior Management and the Board / 2.2.1 Building Relationships / Informal Communication and Understanding/● Informal Communication
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.2 Chief Audit Executive’s Responsibilities for Communicating with Senior Management and the Board / 2.2.1 Building Relationships / Formal Communication/● Official Structured  ● Written Comm
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.2 Chief Audit Executive’s Responsibilities for Communicating with Senior Management and the Board / 2.2.1 Building Relationships / Informal Communication/● Unofficial, Casual  ● No Channels, Oral
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.2 Chief Audit Executive’s Responsibilities for Communicating with Senior Management and the Board / 2.2.1 Building Relationships / Building Relationships Via Informal Talks/● Informal Talks  ● Increased Trust  ● Enhanced Understanding
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.2 Chief Audit Executive’s Responsibilities for Communicating with Senior Management and the Board / 2.2.1 Building Relationships / Objectivity Independence and Relationships/● Maintain Objectivity  ● Build Relationships  ● Effective Communication
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.2 Chief Audit Executive’s Responsibilities for Communicating with Senior Management and the Board / 2.2.1 Building Relationships / CAE Communication with Management/● Regular Communication  ● Attend Meetings  ● Individual Meetings  ● Meet Managers  ● Delegate Responsibility
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.2 Chief Audit Executive’s Responsibilities for Communicating with Senior Management and the Board / 2.2.1 Building Relationships / Obtaining Input on Emerging Risks/● Regular Discussions  ● Conduct Surveys
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.2 Chief Audit Executive’s Responsibilities for Communicating with Senior Management and the Board / 2.2.1 Building Relationships / Internal Audit Communication Methods/● Employee Communication  ● Effective methods
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.2 Chief Audit Executive’s Responsibilities for Communicating with Senior Management and the Board / 2.2.2 Internal Audit Function Communications / Internal Audit Communication Elements/● Effective Activities  ● Audit Plan  ● Independence Concerns  ● Risk Management  ● Audit Engagements  ● Quality Assessment  ● Mandate Changes
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.2 Chief Audit Executive’s Responsibilities for Communicating with Senior Management and the Board / 2.2.2 Internal Audit Function Communications / CAE Board Interaction/● CAE provides  ● Oversight responsibilities
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.2 Chief Audit Executive’s Responsibilities for Communicating with Senior Management and the Board / 2.2.2 Internal Audit Function Communications / Internal Audit Plan Communication/● Audit Plan  ● CAE Discussion
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.2 Chief Audit Executive’s Responsibilities for Communicating with Senior Management and the Board / 2.2.2 Internal Audit Function Communications / Audit Plan Revision Criteria Agreement/● Agree criteria  ● Incorporate criteria
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.2 Chief Audit Executive’s Responsibilities for Communicating with Senior Management and the Board / 2.2.2 Internal Audit Function Communications / CAE Communication Board and Independence/● Direct Reporting  ● Independence Concerns
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.2 Chief Audit Executive’s Responsibilities for Communicating with Senior Management and the Board / 2.2.2 Internal Audit Function Communications / CAE Communication on Independence Concerns/● Confirm Independence  ● Independence Impairment  ● Limitations & Roles
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.2 Chief Audit Executive’s Responsibilities for Communicating with Senior Management and the Board / 2.2.2 Internal Audit Function Communications / Internal Audit Engagement Communication/● Effective Communication
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.2 Chief Audit Executive’s Responsibilities for Communicating with Senior Management and the Board / 2.2.2 Internal Audit Function Communications / CAE Communication with Management on Engagements/● Timing & Reasons  ● Preliminary Scope  ● Resource Needs
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.2 Chief Audit Executive’s Responsibilities for Communicating with Senior Management and the Board / 2.2.2 Internal Audit Function Communications / Engagement Communication Expectations and Needs/● Meet Expectations  ● Senior Management  ● Operating Management
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.2 Chief Audit Executive’s Responsibilities for Communicating with Senior Management and the Board / 2.2.2 Internal Audit Function Communications / CAE's Reporting on Risk Management Effectiveness/● Risk Reporting  ● Unacceptable Risks
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.2 Chief Audit Executive’s Responsibilities for Communicating with Senior Management and the Board / 2.2.2 Internal Audit Function Communications / Communicating Unacceptable Risk Levels Requirements/● Communicate Risk  ● Discuss with Management  ● Escalate to Board  ● Not Resolve
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.2 Chief Audit Executive’s Responsibilities for Communicating with Senior Management and the Board / 2.2.2 Internal Audit Function Communications / Themes in Risk Management and Control Processes/● Audit Patterns  ● Theme Communication
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.2 Chief Audit Executive’s Responsibilities for Communicating with Senior Management and the Board / 2.2.2 Internal Audit Function Communications / External Quality Assessment Frequency/● External Assessment Frequency  ● Self-Assessment Option  ● CAE Assessment Plan
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.2 Chief Audit Executive’s Responsibilities for Communicating with Senior Management and the Board / 2.2.2 Internal Audit Function Communications / Communicating Quality Assessment Results to the Board/● Assessment Results  ● CAE Discussion
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.2 Chief Audit Executive’s Responsibilities for Communicating with Senior Management and the Board / 2.2.3 Changes that Could Impact the Mandate or Charter / Mandate or Charter Impact Changes/● Audit Standards  ● Risk Profile  ● Quality Assurance  ● Strategic Shift
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.3 Stakeholder Relationships / 2.3 Stakeholder Relationships / Stakeholder Relationships and Internal Audit Effectiveness/● Understand Stakeholders  ● Enhance Communication  ● Effective Resources  ● Manage Providers  ● Contribute Governance
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.3 Stakeholder Relationships / 2.3.1 Stakeholder Relationships / Stakeholder Relationships for Internal Audit Effectiveness/● Strong Relationships
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.3 Stakeholder Relationships / 2.3.1 Stakeholder Relationships / Key Internal Audit Stakeholders/● Board, Directors  ● Audit Committee  ● Management Team  ● External Auditors  ● Shareholders  ● Regulators
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.3 Stakeholder Relationships / 2.3.1 Stakeholder Relationships / Ongoing Focus on Stakeholder Relationships/● Ongoing Attention
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.3 Stakeholder Relationships / 2.3.1 Stakeholder Relationships / Internal Audit Stakeholder Collaboration/● Work Together
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.3 Stakeholder Relationships / 2.3.2 The Board and the Audit Committee / CAE Access to Management and Board/● CAE Access  ● CAE Reporting  ● Board Definition
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.3 Stakeholder Relationships / 2.3.2 The Board and the Audit Committee / Audit Committee Membership Requirements/● Board subunit  ● Member qualifications  ● Membership rules  ● Exchange requirement
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.3 Stakeholder Relationships / 2.3.2 The Board and the Audit Committee / CAE Policies for relationships with Audit Committee/● Prevent Conflicts  ● Board Policies
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.3 Stakeholder Relationships / 2.3.3 Role of the Audit Committee / Audit Committee Auditor Independence/● Auditor Independence
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.3 Stakeholder Relationships / 2.3.3 Role of the Audit Committee / Audit Committee & Internal Audit Functions 1/● CAE Oversight  ● Charter Approval  ● Workplan Review  ● Resource Sufficiency  ● Dispute Resolution
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.3 Stakeholder Relationships / 2.3.3 Role of the Audit Committee / Audit Committee & Internal Audit Functions 2/● CAE Communication  ● Review Work  ● Consider Results  ● Corrective Actions  ● Scope Budget
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.3 Stakeholder Relationships / 2.3.3 Role of the Audit Committee / Audit Committee & External Auditing Firm/● Select External Auditor  ● Oversee Work  ● Resolve Disputes  ● Review Reports
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.3 Stakeholder Relationships / 2.3.4 Working Relationship with Management / Auditor's Relationship with Management/● Audit responsibilities  ● Build Relationships
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.3 Stakeholder Relationships / 2.3.4 Working Relationship with Management / Management Working Relationship/● Communicate well  ● Solve Problems  ● Participative methods
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.3 Stakeholder Relationships / 2.3.4 Working Relationship with Management / Participative Auditing/● Audit Collaboration  ● Reduce Conflict  ● Accept Changes
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.3 Stakeholder Relationships / 2.3.4 Working Relationship with Management / Internal Audit Responsibility and Guidance/● Guide Audit  ● Final Responsibility
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.3 Stakeholder Relationships / 2.3.5 Managing Internal Audit Resources / CAE's Role in Audit Resource Management/● Resource Sufficiency  ● Communicate Needs
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.3 Stakeholder Relationships / 2.3.5 Managing Internal Audit Resources / Senior Management's Role in Resource Adequacy/● Resource Adequacy  ● No Hiring  ● Board Budget
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.3 Stakeholder Relationships / 2.3.5 Managing Internal Audit Resources / Internal Audit Resources/● Audit Resources
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.3 Stakeholder Relationships / 2.3.5 Managing Internal Audit Resources / Assessing Internal Audit Resource Sufficiency/● Org Objectives  ● Communications Received  ● Engagement Information  ● Engagement Consequences  ● Staff Competencies
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.3 Stakeholder Relationships / 2.3.5 Managing Internal Audit Resources / Essential Internal Audit Staff Competencies/● Staff Skills  ● Overall Knowledge
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.3 Stakeholder Relationships / 2.3.5 Managing Internal Audit Resources / Skills Assessment and the Audit Plan/● Skills Assessment
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.3 Stakeholder Relationships / 2.3.5 Managing Internal Audit Resources / Job Descriptions for Internal Audit Staff/● Job Summary  ● Identify Skills  ● Hiring Staff
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.3 Stakeholder Relationships / 2.3.5 Managing Internal Audit Resources / Effective Management of Audit Resources/● Sufficient resources  ● CAE planning (Universe and Risk, Plan and Expectations, Unanticipated Activities)
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.3 Stakeholder Relationships / 2.3.5 Managing Internal Audit Resources / CAE's Responsibility in Resource Deployment/● Effective resources  ● Resourcing plan
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.3 Stakeholder Relationships / 2.3.5 Managing Internal Audit Resources / Advantages of Internal Audit Field Offices/● Use field offices  ● Reduced travel  ● Improved Local Service  ● Better Auditor Morale  ● Wider Talent Pool
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.3 Stakeholder Relationships / 2.3.5 Managing Internal Audit Resources / Key Factors in Audit Staff Selection/● Audit Complexity  ● Auditor Experience  ● Training Needs  ● Resources/Skills
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.3 Stakeholder Relationships / 2.3.5 Managing Internal Audit Resources / Managing Internal Audit Skills and Needs/● HR Disciplines  ● Skills Present  ● Meet Needs
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.3 Stakeholder Relationships / 2.3.5 Managing Internal Audit Resources / CAE Communication on Resource Adequacy/● Regular Updates  ● Resource Importance
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.3 Stakeholder Relationships / 2.3.6 Methods for Managing External Providers of Internal Audit Services / Outsourcing and Board's Non-transferable Duty/● Outsourcing IA Option  ● Organization's Final Accountability  ● Board's Non-transferable Duty
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.3 Stakeholder Relationships / 2.3.6 Methods for Managing External Providers of Internal Audit Services / Outsourcing and Internal Audit Responsibility/● Outsourcing responsibility  ● Organization responsible
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.3 Stakeholder Relationships / 2.3.7 External Resources / Outsourcing Internal Audit Functions/● Outsource Options  ● Oversight Stays  ● Standards Apply
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.3 Stakeholder Relationships / 2.3.7 External Resources / Outsourcing and Cosourcing in Internal Audit/● Partial/Total Outsourcing  ● Joint Engagements
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.3 Stakeholder Relationships / 2.3.7 External Resources / CAE Responsibility External Expertise/● Need Expertise  ● CAE Obtain
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.3 Stakeholder Relationships / 2.3.7 External Resources / External Provider Independence and Objectivity/● Qualified Providers  ● Management Involvement
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.3 Stakeholder Relationships / 2.3.7 External Resources / CAE Coordination with External Audit Provider/● CAE Coordination  ● Senior Manager
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.3 Stakeholder Relationships / 2.3.7 External Resources / Coordination and Reliance Requirements/● Coordinate providers  ● Avoid duplication
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.3 Stakeholder Relationships / 2.3.7 External Resources / Evaluating External Internal Audit Providers/● Develop Methodology  ● Consider Factors
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.3 Stakeholder Relationships / 2.3.7 External Resources / External Provider's QAIP Responsibility/● QAIP Awareness  ● QAIP Coverage
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.3 Stakeholder Relationships / 2.3.7 External Resources / External Provider Reporting Lines/● External Reporting
Section A. Internal Audit Operation (25%)/SU2: Internal Audit Strategy and Communication/2.3 Stakeholder Relationships / 2.3.7 External Resources / Appropriate Use of External Providers/● Use Experts  ● Hire Consultant
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.0 Study Unit Three Internal Audit Plan  -- learning objectives / 3.0 Study Unit Three Internal Audit Plan  -- learning objectives / Internal Audit Plan Learning Objectives/● Find Potential Engagements  ● Risk-Based Plan  ● Coordinate Assurance
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.0 Study Unit Three Internal Audit Plan  -- learning objectives / 3.0 Study Unit Three Internal Audit Plan  -- learning objectives / Internal Audit Plan Objectives/● Risks Drive Plan  ● Communicate Effectively  ● Objectivity Enhances  ● Technology Impact
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.0 Study Unit Three Internal Audit Plan  -- learning objectives / 3.0 Study Unit Three Internal Audit Plan  -- learning objectives / Risk-Based Audit Plans and Coordination/● Risk-Based Planning  ● Coordinate Assurance  ● Optimize Resources
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.1 Sources of Potential Engagements / 3.1 Sources of Potential Engagements / Audit Sources Objectivity and Technology/● Audit Sources  ● New Technologies  ● Manage Risks
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.1 Sources of Potential Engagements / 3.1 Sources of Potential Engagements / Sources of Potential Internal Audit Engagements/● Audit services  ● Activities, Policies
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.1 Sources of Potential Engagements / 3.1 Sources of Potential Engagements / Objectivity and Prior Engagements/● Prior Roles  ● Maintain Objectivity  ● Disclose Impairment
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.1 Sources of Potential Engagements / 3.1.1 Evaluations of Controls / Internal Control Evaluation Requests/● Request Evaluations
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.1 Sources of Potential Engagements / 3.1.1 Evaluations of Controls / Ethical Culture Assessment/● Strong Ethics  ● Integrity Examples  ● Realistic Targets  ● Enforce Code
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.1 Sources of Potential Engagements / 3.1.1 Evaluations of Controls / Message/● Message reach  ● Zero tolerance
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.1 Sources of Potential Engagements / 3.1.1 Evaluations of Controls / Identify And Manage Risks/● Identify & Manage  ● Risk Management Process  ● Risk Managed Throughout  ● Risks Discussed
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.1 Sources of Potential Engagements / 3.1.1 Evaluations of Controls / Control System Effectiveness Assessment/● Comprehensive Financial Controls  ● Positive Control Culture  ● Monitoring for Weakness  ● Capable Human Resources
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.1 Sources of Potential Engagements / 3.1.1 Evaluations of Controls / Control Monitoring Strength Assessment/● Board Independence  ● IA Support  ● Auditor Communication  ● Line Management  ● Outsourced Monitoring
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.1 Sources of Potential Engagements / 3.1.2 Other Engagement Sources / Other Internal Audit Engagement Sources/● Audit Charter  ● Whistleblower Reports  ● Laws Regulations  ● External Audits  ● Risk Assessment
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.1 Sources of Potential Engagements / 3.1.3 Emerging Technology Practices and Their Effects on Security / Technology Effects on Information Security/● Evaluate Tech
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.1 Sources of Potential Engagements / 3.1.3 Emerging Technology Practices and Their Effects on Security / Smart Machines/● Automation Tech  ● Learn & Operate  ● Adapt & Generate
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.1 Sources of Potential Engagements / 3.1.3 Emerging Technology Practices and Their Effects on Security / BYOD/● Own Devices
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.1 Sources of Potential Engagements / 3.1.3 Emerging Technology Practices and Their Effects on Security / IoT/● IoT Definition  ● Sensor Data  ● IoT Examples
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.1 Sources of Potential Engagements / 3.1.3 Emerging Technology Practices and Their Effects on Security / Artificial intelligence/● AI Definition
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.1 Sources of Potential Engagements / 3.1.3 Emerging Technology Practices and Their Effects on Security / RPA/● RPA Definition  ● RPA Application  ● Automating Benefits
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.1 Sources of Potential Engagements / 3.1.3 Emerging Technology Practices and Their Effects on Security / Blockchain/● Crypto Popularity  ● Current Limitations  ● Transaction Recording  ● Cryptographic Assets  ● Asset Exchange
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2 Processes to Develop a Risk-Based Audit Plan / Risk-Based Audit Plan Importance/● Understand Risk  ● Identify Risks  ● Allocate Resources  ● Contribute Success
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2 Processes to Develop a Risk-Based Audit Plan / Audit Plan Risk-Based Steps/Planning and Risk Assessment  ● Preliminary Survey  ● Risk Identification  ● Risk Assessment  
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2 Processes to Develop a Risk-Based Audit Plan / Ubiquitous Nature of Risk/● Effect of Uncertainty  ● Risks Everywhere
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.1 Internal Audit Plan / Internal Audit Plan Priorities/● Set priorities  ● Based on understanding
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.1 Internal Audit Plan / Internal Audit Plan Development/● CAE Establishes  ● Risk-Based
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.1 Internal Audit Plan / Standard 9.4 Internal Audit Plan Requirements/● Audit Plan  ● Risk Assessment  ● Informed Assessment  ● Annual Assessment
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.2 Priorities Based on the Risk Assessment / Risk-Based Audit Plan Reflects Risk/● Audit Plan Reflect Risks  ● Auditor Competencies
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.2 Priorities Based on the Risk Assessment / Risk-Based Audit Plan Links Risks and Goals 1/● Audit Plan  ● Connect Risks
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.2 Priorities Based on the Risk Assessment / Risk-Based Audit Plan Links Risks and Goals 2/● Focus on Risks  ● Prioritize Risks  ● Consult Regularly
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.2 Priorities Based on the Risk Assessment / Auditor Judgment Drives Risk Assessment/● Confirm assessments  ● Auditor judgment
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.2 Priorities Based on the Risk Assessment / Stakeholder Service Considerations/● Stakeholder wants  ● Operating benefits
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.2 Priorities Based on the Risk Assessment / Internal Audit Stakeholder Relationships/● Strong relationships  ● Key stakeholders
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.2 Priorities Based on the Risk Assessment / Consistent Focus on Risk Identification/● Consistent Risk Focus
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.2 Priorities Based on the Risk Assessment / Advisory Services Benefit Assessment/● Advisory Planning
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.2 Priorities Based on the Risk Assessment / Stakeholder Expectations and Organizational Responsibility/● Manage Impact  ● Engage Stakeholders  ● Report Results
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.3 Production of an Audit Plan / Key Factors for Audit Plan Production/● Planning Approach  ● Prior Engagements  ● Strategies, Risks
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.3 Production of an Audit Plan / Engagement Scope and Stakeholder Expectations/● Background Information  ● Setting Objectives  ● Program Approval  ● Standards Adherence
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.3 Production of an Audit Plan / Advisory Engagements Benefit Versus Cost/● Audit Resources  ● Benefits vs Costs
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.3 Production of an Audit Plan / Audit Goals Measurable and Achievable/● Achievable Goals  ● Measurable Goals  ● Criteria & Dates
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.4 Audit Risk and Its Components / Audit Risk/● Incorrect findings  ● Flawed information
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.4 Audit Risk and Its Components / Inherent Risk/● Risk Factors  ● Nature  ● Examples
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.4 Audit Risk and Its Components / Control Risk/● Risk Reduction  ● Not meet objectives
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.4 Audit Risk and Its Components / Detection Risk/● Misstatement chance  ● Missed issues
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.4 Audit Risk and Its Components / Audit Risk Model/● Audit risk = (Inherent risk × Control risk) × Detection risk  ● Risk Assessment
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.4 Audit Risk and Its Components / Auditor Response to Assessed Risk/● Manage Detection  ● Assess Risks  ● Adjust Detection  ● Reduce Risk
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.4 Audit Risk and Its Components / Responding to Assessed Control Risk/● Increase Control Risk  ● Risk Function Factors  ● Control Detection Risk  ● Inverse Relationship  ● Decrease Detection Risk  ● Increase Procedures
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.4 Audit Risk and Its Components / Understanding the Audit Risk Model/● Changing the components  ● Audit risk = (Inherent risk × Control risk) × Detection risk
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.5 The Risk-Based Audit Plan / Audit Universe Defined for Risk Identification/● Audit universe  ● Identify risks
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.5 The Risk-Based Audit Plan / Audit Universe Relation to Risk-Based Audit Plan/● Audit Universe  ● Business Objectives  ● Risk Attitude  ● Objective Difficulty  ● Risk Management  ● Operating Environment
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.5 The Risk-Based Audit Plan / Documented Risk Assessment and Audit Universe/● Risk Assessment
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.5 The Risk-Based Audit Plan / Risk-Based Audit Plan Key Considerations/● Audit Universe  ● Audit Requests  ● Cyclical Audit Priority
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.5 The Risk-Based Audit Plan / Annual Audit Universe Assessment Requirement/● Audit Universe
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.5 The Risk-Based Audit Plan / Dynamic Audit Plan Adjustments and Documentation/● Audit Adjustment  ● Procedure Changes  ● Document Strategy
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.5 The Risk-Based Audit Plan / Risk-Based Audit Plan Development Factors/● Audit universe  ● Management Input  ● Assessed Risks
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.5 The Risk-Based Audit Plan / Management Requests Incorporation into Audit Plan/● Request: Relevance  ● Request: Alignment  ● Request: Priority  ● Resource constraints
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.5 The Risk-Based Audit Plan / Audit Plan Key Considerations/● Management approval  ● Auditor skills
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.5 The Risk-Based Audit Plan / Audit Universe vs Audit Plan/● Audit Universe  ● Distinguish Differences
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.6 Components of the Audit Cycle / Audit Cycle Components/● Audit Planning  ● Audit Procedures  ● Analyze Findings  ● Report Findings  ● Follow-up Audit
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.6 Components of the Audit Cycle / Internal Audit's Audit Cycle Importance/● Fulfilling IA's Responsibility  ● Nature of work
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.7 Timeline and Components of the Audit Plan / Audit Plan Timeline/● Annual Period  ● Assurance Work  ● Basis Inclusion  ● Goals Scope  ● Audit Strategy  ● Legal Required
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.7 Timeline and Components of the Audit Plan / Audit Plan Components and Considerations/● Strategy Engagements  ● High-Risk Areas  ● Advisory Requests  ● Resource Needs  ● Potential Benefits
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.8 Resource Constraints / Resource Constraints Impact Audit Plan/● Resource Limits  ● Auditor Skills
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.8 Resource Constraints / Risk-Based Audit Plan Audit Frequency/● Not all areas  ● Frequency = Risk  ● Add most value
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.9 Alignment with Strategy / Aligning Audit Plan with Strategy/● Plan Alignment  ● Monitor Alignment  ● Periodic Review  ● Review Frequency
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.9 Alignment with Strategy / Audit Objectives Assurance and Information/● Key Objectives  ● Assurance Includes
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.10 Working Relationships / Audit Plan Management Relationships/● Effective Communication  ● Resolve Conflicts  ● Participative Methods
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.10 Working Relationships / Participative Auditing/● Audit Collaboration  ● Reduce Conflict  ● Accept Changes
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.10 Working Relationships / Risk Based Schedules/● Schedule Basis
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.10 Working Relationships / Internal Risk Factors in Planning/● Control Quality  ● Degree of Change  ● Prior Audit Results  ● Potential Impact  ● Risk Likelihood  ● Financial Materiality  ● Asset Characteristics  ● Management Competence  ● Fraud Potential  ● Regulatory Penalties  
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.10 Working Relationships / External Risk Factors in Planning/● Competitor Actions  ● Supplier Issues  ● Industry Problems  ● Relations External
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.11 Risk Management Process / Engagement Planning and Risk Management/● Risk understanding  ● Key component
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.11 Risk Management Process / Internal Audit Risk Management Definition/● Identify, Assess, Manage, Control  ● Focus on Potential Events  ● Achieving Company Objectives
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.11 Risk Management Process / Risk Management Integration and Frameworks/● Risk Management Importance  ● Framework Usage  ● CAE Assessment
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.11 Risk Management Process / Risk Appetite and Risk Tolerance/● Key Controls  ● Risk Appetite  ● Risk Tolerance
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.11 Risk Management Process / Internal Audit Current Risk Assessment/● Risk after controls
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.11 Risk Management Process / Key Controls and Risk Reduction/● Effective Controls  ● Individual Risk  ● Multiple Risks
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.11 Risk Management Process / Audit Assurance on Significant Risks/● Audit Key Controls
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.11 Risk Management Process / Individual Audit Planning Considerations/● Identify Risks    Normally focuses on  ● Unacceptable Risks  ● Key Controls  ● Risk Differences  ● High Inherent
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.11 Risk Management Process / Due Professional Care and Competencies/● Task Complexity  ● Auditor Skills
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.11 Risk Management Process / Communicate Audit Plan Risks to Board/● Audit Plan Risks  ● Resource Limits
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.12 Proposed Internal Audit Plan / Proposed Internal Audit Plan Elements 1/● Assurance and Advisory Engagements  ● Basis Inclusion  ● Objective & Scope  ● Strategic Projects  ● Legally Required
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.12 Proposed Internal Audit Plan / Proposed Internal Audit Plan Elements 2/● Strategy Alignment  ● Risk Coverage  ● Engagement Benefits  ● Resource Allocation  ● Contingency Buffer
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.12 Proposed Internal Audit Plan / Internal Audit Plan Adaptability/● Flexible Plan  ● Timely Updates  ● Approval Needed  ● Review Frequency
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.12 Proposed Internal Audit Plan / Risk Assessment and Emerging Trends/● Trends & Risk  ● Trends & Resources
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.12 Proposed Internal Audit Plan / Industry Trends and Emerging Risks/● Industry Trends  ● Emerging Risks
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.12 Proposed Internal Audit Plan / Emerging Risks and Internal Audit/● Seek Learning  ● Standard 3.1 Competency  ● Tech Impact   ● Learn Technologies
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.12 Proposed Internal Audit Plan / Risk-Based Audit Plan Development Steps 1/● Understand organization  ● Risk assessment  ● Coordinate providers  ● Estimate resources  ● Draft plan
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.2 Processes to Develop a Risk-Based Audit Plan / 3.2.12 Proposed Internal Audit Plan / Risk-Based Audit Plan Development Steps 2/● Propose Feedback  ● Finalize Plan  ● Communicate Approval  ● Implement Engagements  ● Assess Risks
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.3 Coordinate and Evaluate the Work of Other Assurance Providers / 3.3 Coordinate and Evaluate the Work of Other Assurance Providers / Assurance Provider Coordination for Audit Effectiveness/● Audit Effectiveness  ● Align Efforts  ● Clarify Roles
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.3 Coordinate and Evaluate the Work of Other Assurance Providers / 3.3.1 Coordinating the Work of the Internal Audit Function with Other Providers / Coordination and Reliance on Assurance Providers/● CAE Coordination  ● External Providers
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.3 Coordinate and Evaluate the Work of Other Assurance Providers / 3.3.1 Coordinating the Work of the Internal Audit Function with Other Providers / Standard 9.5 Coordination and Reliance Requirements/● Coordinate Reliance  ● Minimize Duplication
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.3 Coordinate and Evaluate the Work of Other Assurance Providers / 3.3.1 Coordinating the Work of the Internal Audit Function with Other Providers / Internal Assurance Providers/● Report Structure  ● Functions Addressed
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.3 Coordinate and Evaluate the Work of Other Assurance Providers / 3.3.1 Coordinating the Work of the Internal Audit Function with Other Providers / External Assurance Providers/● External Reporting  ● Assess Objectivity  ● No Attest Coordination
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.3 Coordinate and Evaluate the Work of Other Assurance Providers / 3.3.1 Coordinating the Work of the Internal Audit Function with Other Providers / External Assurance Providers Examples/● External auditors  ● Actuaries included  ● Contract interpretation  ● Inspectors included  ● Other specialists
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.3 Coordinate and Evaluate the Work of Other Assurance Providers / 3.3.1 Coordinating the Work of the Internal Audit Function with Other Providers / Coordination with Assurance Providers/● Confidentiality Needs  ● Share Documents  ● Schedule Meetings
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.3 Coordinate and Evaluate the Work of Other Assurance Providers / 3.3.1 Coordinating the Work of the Internal Audit Function with Other Providers / Coordination with External Assurance Providers Examples/● Synchronize Work  ● Rely on Work  ● Adjust Timing  ● Combining Results
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.3 Coordinate and Evaluate the Work of Other Assurance Providers / 3.3.1 Coordinating the Work of the Internal Audit Function with Other Providers / Coordinating Assurance Activities Process and Methods/Varies  ● Informal Coordination  ● Formal Coordination
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.3 Coordinate and Evaluate the Work of Other Assurance Providers / 3.3.1 Coordinating the Work of the Internal Audit Function with Other Providers / Assurance Mapping for Coordination/● Assurance coordination  ● Connect and Assess
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.3 Coordinate and Evaluate the Work of Other Assurance Providers / 3.3.1 Coordinating the Work of the Internal Audit Function with Other Providers / Sharing Assurance Results for Efficiency/● Improving Audit Efficiency
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.3 Coordinate and Evaluate the Work of Other Assurance Providers / 3.3.1 Coordinating the Work of the Internal Audit Function with Other Providers / Combined Assurance Model for Coordination/● Assurance Coordination  ● Reduce Redundancy
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.3 Coordinate and Evaluate the Work of Other Assurance Providers / 3.3.1 Coordinating the Work of the Internal Audit Function with Other Providers / Coordinating Assurance Activities in Internal Audit/● Align timing  ● Shared understanding  ● Access documents  ● Rely on others  ● Adjust timing
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.3 Coordinate and Evaluate the Work of Other Assurance Providers / 3.3.1 Coordinating the Work of the Internal Audit Function with Other Providers / Relying on Other Assurance Providers Work Criteria/● Provider qualities  ● Review scope  ● Evaluate findings  ● Incremental effort
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.3 Coordinate and Evaluate the Work of Other Assurance Providers / 3.3.1 Coordinating the Work of the Internal Audit Function with Other Providers / CAE Responsibility for Assurance Conclusions/● CAE Responsibility
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.3 Coordinate and Evaluate the Work of Other Assurance Providers / 3.3.2 Coordinating with Regulatory Oversight Bodies / Regulatory Oversight in Audits/● Government Rules  ● Typical Regulations
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.3 Coordinate and Evaluate the Work of Other Assurance Providers / 3.3.2 Coordinating with Regulatory Oversight Bodies / Local and Regional Regulatory Bodies/● Local Regulators
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.3 Coordinate and Evaluate the Work of Other Assurance Providers / 3.3.2 Coordinating with Regulatory Oversight Bodies / Regulatory Compliance Departments/● Compliance departments
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.3 Coordinate and Evaluate the Work of Other Assurance Providers / 3.3.2 Coordinating with Regulatory Oversight Bodies / Internal Audit Coordination with Regulators/● Compliance Assessment  ● Coordinate Work
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.3 Coordinate and Evaluate the Work of Other Assurance Providers / 3.3.3 Three Lines Model / Three Lines Model Value Creation/● Model setup  ● Value creation
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.3 Coordinate and Evaluate the Work of Other Assurance Providers / 3.3.3 Three Lines Model / Three Lines Model Key Aspects/● Risk-based Approach  ● CAE Understanding  ● Six Principles
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.3 Coordinate and Evaluate the Work of Other Assurance Providers / 3.3.3 Three Lines Model / Principle 1: Governance/● Governing Accountability  ● Managerial Actions  ● Independent Assurance
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.3 Coordinate and Evaluate the Work of Other Assurance Providers / 3.3.3 Three Lines Model / Principle 2: Governing body roles/● Governance Structures  ● Align Objectives  ● Management Responsibility  ● Oversee Audit
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.3 Coordinate and Evaluate the Work of Other Assurance Providers / 3.3.3 Three Lines Model / Principle 3: Management – First and second line roles/● First Line  ● Second Line  ● Second Line Objectives Examples
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.3 Coordinate and Evaluate the Work of Other Assurance Providers / 3.3.3 Three Lines Model / Principle 4: Third line roles/● Assurance & Advice  ● Report to Management  ● Consider other providers
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.3 Coordinate and Evaluate the Work of Other Assurance Providers / 3.3.3 Three Lines Model / Principle 5: Third line independence/● Audit Independence  ● Governing Body  ● Free Access  ● No Bias
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.3 Coordinate and Evaluate the Work of Other Assurance Providers / 3.3.3 Three Lines Model / Principle 6: Creating and protecting value/● Value Alignment  ● Reliable Decisions
Section B. Internal Audit Plan (15%)/SU3: Internal Audit Plan/3.3 Coordinate and Evaluate the Work of Other Assurance Providers / 3.3.3 Three Lines Model / The Three Lines Model/● Governing Body  ● Management Accountable  ● First Line  ● Second Line  ● Internal Audit
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.0 Study Unit Four Quality of the Internal Audit Function -- learning objectives / 4.0 Study Unit Four Quality of the Internal Audit Function -- learning objectives / Quality of Internal Audit Function Objectives/● Quality Program  ● Disclose Nonconformance  ● Audit KPIs
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.0 Study Unit Four Quality of the Internal Audit Function -- learning objectives / 4.0 Study Unit Four Quality of the Internal Audit Function -- learning objectives / QAIP and Internal Audit Performance/● QAIP Design  ● Program Assessment  ● Performance Measures
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.0 Study Unit Four Quality of the Internal Audit Function -- learning objectives / 4.0 Study Unit Four Quality of the Internal Audit Function -- learning objectives / Ensuring Internal Audit Quality and Value/● Quality Program Foundation  ● Measuring Performance with KPIs  ● Enhancing Audit Value
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.1 Elements of the Quality Assurance and Improvement Program (QAIP) / 4.1 Elements of the Quality Assurance and Improvement Program (QAIP) / QAIP Importance for Internal Auditors/● Create and Maintain QAIP  ● Understand QAIP  ● Know QAIP
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.1 Elements of the Quality Assurance and Improvement Program (QAIP) / 4.1 Elements of the Quality Assurance and Improvement Program (QAIP) / QAIP Elements CAE Responsibility/● CAE Responsibility
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.1 Elements of the Quality Assurance and Improvement Program (QAIP) / 4.1 Elements of the Quality Assurance and Improvement Program (QAIP) / QAIP Evaluation and Promotion/● Follows Standards  ● Meets Goals  ● Efficient, Effective
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.1 Elements of the Quality Assurance and Improvement Program (QAIP) / 4.1 Elements of the Quality Assurance and Improvement Program (QAIP) / QAIP Elements Communication and Reporting/● Maintain QAIP  ● Report Internal  ● Report External
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.1 Elements of the Quality Assurance and Improvement Program (QAIP) / 4.1 Elements of the Quality Assurance and Improvement Program (QAIP) / QAIP Elements Internal and External Assessments/● External Assessments  ● Internal Assessments
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.1 Elements of the Quality Assurance and Improvement Program (QAIP) / 4.1.1 Characteristics of a QAIP / QAIP Scope and Assessments/● All Aspects  ● Internal Assessments  ● External Assessments  
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.1 Elements of the Quality Assurance and Improvement Program (QAIP) / 4.1.1 Characteristics of a QAIP / QAIP Five Components/● Internal assessment  ● External assessment  ● Communicate results  ● Conformance statement  ● Disclose nonconformance
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.1 Elements of the Quality Assurance and Improvement Program (QAIP) / 4.1.1 Characteristics of a QAIP / QAIP and Standards Conformance/● Standard 4.1  ● QAIP Requirement
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.1 Elements of the Quality Assurance and Improvement Program (QAIP) / 4.1.1 Characteristics of a QAIP / Internal Audit Standards Conformance/● Audit Standards
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.1 Elements of the Quality Assurance and Improvement Program (QAIP) / 4.1.1 Characteristics of a QAIP / QAIP Evaluation and Updates/● Evaluate QAIP  ● Update QAIP  ● Assures Stakeholders
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.1 Elements of the Quality Assurance and Improvement Program (QAIP) / 4.1.1 Characteristics of a QAIP / QAIP Communication Elements/● QAIP Scope Results  ● Action Plans  ● Progress Actions
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.1 Elements of the Quality Assurance and Improvement Program (QAIP) / 4.1.2 External Quality Assessment / External Quality Assessment Standard/● External assessment
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.1 Elements of the Quality Assurance and Improvement Program (QAIP) / 4.1.2 External Quality Assessment / External Quality Assessment Requirements/● External Review  ● Self-Review Option  ● CIA Certification
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.1 Elements of the Quality Assurance and Improvement Program (QAIP) / 4.1.2 External Quality Assessment / CAE and External Assessment Scope/● CAE Scope
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.1 Elements of the Quality Assurance and Improvement Program (QAIP) / 4.1.2 External Quality Assessment / External Assessment Board Approval and Results/● Board Approval  ● Results to Board
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.1 Elements of the Quality Assurance and Improvement Program (QAIP) / 4.1.2 External Quality Assessment / Board Approval of CAE Action Plans/● Board approves actions  ● Board approves timeline
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.1 Elements of the Quality Assurance and Improvement Program (QAIP) / 4.1.2 External Quality Assessment / External Assessment Frequency and Changes/● Assessment Frequency  ● Leadership Changes  ● Audit Methodologies Changes  ● Significant Staff Turnover
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.1 Elements of the Quality Assurance and Improvement Program (QAIP) / 4.1.3 Recommended Comprehensive Review / Internal Audit Function Adequacy Review 1/● Adequacy Review  ● Standards Conformance  ● Function Assessment  ● Laws Compliance  ● Performance Results  ● Competencies/Care
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.1 Elements of the Quality Assurance and Improvement Program (QAIP) / 4.1.3 Recommended Comprehensive Review / Internal Audit Function Adequacy Review 2/● Qualifications Review  ● Independence Positioning  ● Governance Contribution  ● Operational Improvement  ● Expectations Met
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.1 Elements of the Quality Assurance and Improvement Program (QAIP) / 4.1.3 Recommended Comprehensive Review / Internal Audit Cost Efficiency Check/● Adequacy Assessment
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.1 Elements of the Quality Assurance and Improvement Program (QAIP) / 4.1.3 Recommended Comprehensive Review / CAE Stakeholder Relationship Evaluation/● CAE Relationships
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.1 Elements of the Quality Assurance and Improvement Program (QAIP) / 4.1.3 Recommended Comprehensive Review / External Assessment Team Qualifications and Independence/● Qualified Team  ● CIA Required  ● IIA Standards  ● Audit Expertise  ● No Conflicts
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.1 Elements of the Quality Assurance and Improvement Program (QAIP) / 4.1.4 Lack of Independence / Lack of Independence Considerations/● Independence Affected  ● Employees from another department  ● Former employees, external financial statement auditors
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.1 Elements of the Quality Assurance and Improvement Program (QAIP) / 4.1.5 Self-Assessment with Validation / Self-Assessment with Independent Validation/● SAIV as Alternative  ● Comprehensive Emulation  ● Independent Validation  ● Benchmarking, leading practices, and interviews
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.1 Elements of the Quality Assurance and Improvement Program (QAIP) / 4.1.6 Internal Quality Assessment / Internal Audit Quality Assessment/● Internal Assessment
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.1 Elements of the Quality Assurance and Improvement Program (QAIP) / 4.1.6 Internal Quality Assessment / Standard 12.1 Internal Quality Assessment/● Conduct assessments  ● Establish methodology
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.1 Elements of the Quality Assurance and Improvement Program (QAIP) / 4.1.6 Internal Quality Assessment / Internal Assessment Quality Methodology/● Ongoing monitoring  ● Periodic self-assessments  ● Review progress  ● Communicate results
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.1 Elements of the Quality Assurance and Improvement Program (QAIP) / 4.1.6 Internal Quality Assessment / Internal Audit Ongoing Monitoring/Engagement Level Reviews  ● Supervision at Every Step  ● Documentation and Tools  ● Confirmation by the CAE  ● Stakeholder Feedback  ● Performance Measurement KPIs
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.1 Elements of the Quality Assurance and Improvement Program (QAIP) / 4.1.6 Internal Quality Assessment / Periodic Self-Assessments in Internal Audit/● Audit Methodologies  ● Support Objectives  ● Audit Quality  ● Stakeholder Expectations
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.1 Elements of the Quality Assurance and Improvement Program (QAIP) / 4.1.6 Internal Quality Assessment / Internal Assessment Team Composition/● Senior Auditors  ● QA Team  ● CIA/Experienced Staff  ● Other Competent Staff
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.1 Elements of the Quality Assurance and Improvement Program (QAIP) / 4.1.6 Internal Quality Assessment / Action Plans for Nonconformance and Improvement/● Action Plans  ● Timeline Included  ● Communicate Results
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.1 Elements of the Quality Assurance and Improvement Program (QAIP) / 4.1.7 Reporting Results / QAIP Results Reporting/● Report results
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.1 Elements of the Quality Assurance and Improvement Program (QAIP) / 4.1.7 Reporting Results / Reporting Audit Professionalism to Leadership/● Degree of Professionalism
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.1 Elements of the Quality Assurance and Improvement Program (QAIP) / 4.1.7 Reporting Results / External Assessment Report Conclusion and Standards/● Assessment Conclusion  ● Standard Assessment  ● Conformance Results
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.1 Elements of the Quality Assurance and Improvement Program (QAIP) / 4.1.7 Reporting Results / Conformance Rating Scale in Internal Audit/● Generally conforms  ● Partially conforms  ● Does not conform
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.1 Elements of the Quality Assurance and Improvement Program (QAIP) / 4.1.7 Reporting Results / External Assessment Recommendations and Action Plans/● Assessment Recommendations  ● Management Actions  ● CAE Considerations  ● Board Communication
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.2 Disclosure of Nonconformance with The IIA’s Global Internal Audit Standards / 4.2 Disclosure of Nonconformance with The IIA’s Global Internal Audit Standards / Nonconformance Disclosure Importance/● Conformance Importance  ● QAIP Adherence  ● Proactive Disclosure  ● Strengthening the Organization  ● Improving and Adding Value, Supporting Strategic Objectives
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.2 Disclosure of Nonconformance with The IIA’s Global Internal Audit Standards / 4.2 Disclosure of Nonconformance with The IIA’s Global Internal Audit Standards / QAIP and Standards Adherence/● QAIP Essential
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.2 Disclosure of Nonconformance with The IIA’s Global Internal Audit Standards / 4.2 Disclosure of Nonconformance with The IIA’s Global Internal Audit Standards / Reporting IIA Standards Nonconformance/● Audit Importance  ● Report Nonconformance  ● Function, Not Engagements
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.2 Disclosure of Nonconformance with The IIA’s Global Internal Audit Standards / 4.2.1 Requirement to Disclose Nonconformance with Standards / Disclosure of Nonconformance Overview/● Conformance with the Standards
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.2 Disclosure of Nonconformance with The IIA’s Global Internal Audit Standards / 4.2.1 Requirement to Disclose Nonconformance with Standards / Documenting Nonconformance/● CAE Disclose  ● Laws Prohibit  ● Impact Disclosure
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.2 Disclosure of Nonconformance with The IIA’s Global Internal Audit Standards / 4.2.1 Requirement to Disclose Nonconformance with Standards / Final Report Disclosure Requirements/Report details  ● State standard  ● Explain reason/impact
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.2 Disclosure of Nonconformance with The IIA’s Global Internal Audit Standards / 4.2.1 Requirement to Disclose Nonconformance with Standards / Circumstances Causing Nonconformance/● Preventing Circumstances
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.2 Disclosure of Nonconformance with The IIA’s Global Internal Audit Standards / 4.2.1 Requirement to Disclose Nonconformance with Standards / Outsourcing the Internal Audit Function/● Outsourcing Audit Work  ● Retaining Responsibility  ● Demonstrating Oversight via QAIP
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.2 Disclosure of Nonconformance with The IIA’s Global Internal Audit Standards / 4.2.2 Planning / Engagement Planning Value Added/● Engagement planning  ● Adding value
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.2 Disclosure of Nonconformance with The IIA’s Global Internal Audit Standards / 4.2.2 Planning / Planning memo, Other documentation, and RCM/● Planning Memo  ● Other Documentation  ● RCM Insights  ● Obtain Information  ● Familiar with Engagements  ● Discuss with Management
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.2 Disclosure of Nonconformance with The IIA’s Global Internal Audit Standards / 4.2.2 Planning / Other Engagement Planning Considerations/● Resource Usage  ● Document Retention  ● Program Preparation
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.2 Disclosure of Nonconformance with The IIA’s Global Internal Audit Standards / 4.2.2 Planning / Communicating IIA Standards Nonconformance/● CAE Communication  ● Required Information
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.3 Internal Audit Key Performance Indicators (KPIs) / 4.3 Internal Audit Key Performance Indicators (KPIs) / Evaluating Internal Audit Effectiveness/● Set Goals
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.3 Internal Audit Key Performance Indicators (KPIs) / 4.3 Internal Audit Key Performance Indicators (KPIs) / Measuring Internal Audit Performance/● Set Objectives  ● Consider Input  ● Measure Progress
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.3 Internal Audit Key Performance Indicators (KPIs) / 4.3 Internal Audit Key Performance Indicators (KPIs) / Understanding Internal Audit Performance Objectives/● Performance goals
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.3 Internal Audit Key Performance Indicators (KPIs) / 4.3 Internal Audit Key Performance Indicators (KPIs) / KPIs and Scorecard Metrics/● Measure performance
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.3 Internal Audit Key Performance Indicators (KPIs) / 4.3 Internal Audit Key Performance Indicators (KPIs) / Setting Internal Audit KPI Target Ranges/● KPI Measures  ● Target Range
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.3 Internal Audit Key Performance Indicators (KPIs) / 4.3 Internal Audit Key Performance Indicators (KPIs) / Setting Balanced Performance Objectives/● Advancing Desired Outcomes  ● The Need for Balance  ● Four Key Areas
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.3 Internal Audit Key Performance Indicators (KPIs) / 4.3 Internal Audit Key Performance Indicators (KPIs) / Using Quantitative Performance Measures/● Numerical data  ● Easy collect and comparison  ● Audit examples
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.3 Internal Audit Key Performance Indicators (KPIs) / 4.3 Internal Audit Key Performance Indicators (KPIs) / Using Qualitative Performance Measures/● Deeper Insights  ● Data Comparison  ● Measurement Tools
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.3 Internal Audit Key Performance Indicators (KPIs) / 4.3.1 Key Metrics / Internal Audit KPI Metrics/● Key Metrics  ● Metric Coverage
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.3 Internal Audit Key Performance Indicators (KPIs) / 4.3.1 Key Metrics / Financial Metrics/● Hourly cost  ● Actual vs projection  ● Monetary benefit
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.3 Internal Audit Key Performance Indicators (KPIs) / 4.3.1 Key Metrics / Operational Metrics/● Audit Time  ● Audit Quantity  ● Audit Findings
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.3 Internal Audit Key Performance Indicators (KPIs) / 4.3.1 Key Metrics / Quality Metrics/● Audit Standards  ● Track Findings
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.3 Internal Audit Key Performance Indicators (KPIs) / 4.3.1 Key Metrics / Productivity Metrics/● Auditor Workload Capacity  ● Time per Engagement  ● Auditor Downtime
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.3 Internal Audit Key Performance Indicators (KPIs) / 4.3.1 Key Metrics / Efficiency Metrics/● Work Hours/Findings  ● Tech Use  ● Time to Report
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.3 Internal Audit Key Performance Indicators (KPIs) / 4.3.1 Key Metrics / Effectiveness Metrics/● Impact of Recommendations  ● Management's Response Rate  ● Stakeholder Perception
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.3 Internal Audit Key Performance Indicators (KPIs) / 4.3.2 Deming Cycle / Deming Cycle QAIP Establishment/● Deming Cycle  ● Improvement Model
Section C. Quality of the Internal Audit Function (15%)/SU4: Quality of the Internal Audit Function/4.3 Internal Audit Key Performance Indicators (KPIs) / 4.3.2 Deming Cycle / Deming Cycle in Internal Audit/● Plan Standards  ● Do Execute  ● Check Compare  ● Act Feedback
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.0 Study Unit Five Engagement Results and Monitoring: Action Plans -- learning objectives / 5.0 Study Unit Five Engagement Results and Monitoring: Action Plans -- learning objectives / Engagement Results and Monitoring Objectives/● Action Determination  ● Residual Risk  ● Monitoring Implementation  ● Escalation Process
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.0 Study Unit Five Engagement Results and Monitoring: Action Plans -- learning objectives / 5.0 Study Unit Five Engagement Results and Monitoring: Action Plans -- learning objectives / Engagement Results and Action Plans/● Share Results  ● Document & Adjust  ● Management Feedback
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.0 Study Unit Five Engagement Results and Monitoring: Action Plans -- learning objectives / 5.0 Study Unit Five Engagement Results and Monitoring: Action Plans -- learning objectives / Engagement Results and Monitoring Action Plans/● Audit Improvements  ● Analyze Findings  ● Follow-up Actions
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.1 Auditor Recommendations and Management Action Plans / 5.1 Auditor Recommendations and Management Action Plans / Auditor Recommendations Reporting/● Reporting findings  ● Analyze findings  ● Root cause  ● Cost-benefit  ● Manage disagreements  ● Enhance effectiveness
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.1 Auditor Recommendations and Management Action Plans / 5.1 Auditor Recommendations and Management Action Plans / Audit Findings and Conclusions/● Engagement Information
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.1 Auditor Recommendations and Management Action Plans / 5.1 Auditor Recommendations and Management Action Plans / Recommendations for Organizational Value/● Audit Driven  ● Enhance Value  ● Action Focused
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.1 Auditor Recommendations and Management Action Plans / 5.1 Auditor Recommendations and Management Action Plans / Recommendations and Action Plans Standard/● Recommendations and Action Plans
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.1 Auditor Recommendations and Management Action Plans / 5.1 Auditor Recommendations and Management Action Plans / Recommendations and Action Plans Requirements 1/● Determine Actions  ● Resolve the Gap  ● Mitigate the Risk  ● Address Root Cause  ● Enhance the Process
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.1 Auditor Recommendations and Management Action Plans / 5.1 Auditor Recommendations and Management Action Plans / Recommendations and Action Plans Requirements 2/● Discuss Recommendations  ● Resolve Disagreements
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.1 Auditor Recommendations and Management Action Plans / 5.1 Auditor Recommendations and Management Action Plans / Auditor Recommendations Management Action/● Discuss findings  ● Feasibility discussion  ● Cost benefit  ● Address root
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.1 Auditor Recommendations and Management Action Plans / 5.1.1 Attributes of Findings and Recommendations / Audit Report A Complete Checklist/● Complete Checklist  ● Required Report Sections  ● Criteria versus Condition  ● Done Found and Recommended
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.1 Auditor Recommendations and Management Action Plans / 5.1.1 Attributes of Findings and Recommendations / Audit Findings and Recommendations Elements/● Criteria part  ● Condition part  ● Cause part  ● Effect part  ● Background part  ● Outlining the Solution
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.1 Auditor Recommendations and Management Action Plans / 5.1.1 Attributes of Findings and Recommendations / Criteria Defined Audit Hypothesis/● Evaluation Standards  ● Hypothesis Creation  ● Payable Recording
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.1 Auditor Recommendations and Management Action Plans / 5.1.1 Attributes of Findings and Recommendations / Condition Defined Factual Audit Finding/● Factual Evidence  ● Observed Findings  ● AP Example
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.1 Auditor Recommendations and Management Action Plans / 5.1.1 Attributes of Findings and Recommendations / Cause Defined Reason For Difference/● Define Cause  ● Address Cause  ● Purchasing Example
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.1 Auditor Recommendations and Management Action Plans / 5.1.1 Attributes of Findings and Recommendations / Effect on Organization and Financials/● Risk exposure  ● Quantifying the Impact  ● Material amount Example
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.1 Auditor Recommendations and Management Action Plans / 5.1.1 Attributes of Findings and Recommendations / Background Information in Audit Reports/● Report context  ● Activities, Findings  ● Prior Recommendations  ● Conclusions, Summaries
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.1 Auditor Recommendations and Management Action Plans / 5.1.1 Attributes of Findings and Recommendations / Audit Finding Conclusion Example/● Control Ineffective  ● Further Investigation
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.1 Auditor Recommendations and Management Action Plans / 5.1.1 Attributes of Findings and Recommendations / Findings and Recommendations Also Inclusions/● Client Accomplishments  ● Related Issues  ● Supportive Info
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.1 Auditor Recommendations and Management Action Plans / 5.1.1 Attributes of Findings and Recommendations / Identify Finding Attributes/● Identify attributes  ● CCCEBC
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.1 Auditor Recommendations and Management Action Plans / 5.1.1 Attributes of Findings and Recommendations / Favorable Findings/● Keep short  ● Production example
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.1 Auditor Recommendations and Management Action Plans / 5.1.1 Attributes of Findings and Recommendations / Unfavorable Findings/● Need explanation  ● Elements included
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.1 Auditor Recommendations and Management Action Plans / 5.1.1 Attributes of Findings and Recommendations / Example: Inaccurate Inventory Records/● Inaccurate Records
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.1 Auditor Recommendations and Management Action Plans / 5.1.1 Attributes of Findings and Recommendations / Example: Inventory Record Accuracy Criteria/● Excess materials
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.1 Auditor Recommendations and Management Action Plans / 5.1.1 Attributes of Findings and Recommendations / Example: Unrecorded Supplies Condition/● Unrecorded Returns
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.1 Auditor Recommendations and Management Action Plans / 5.1.1 Attributes of Findings and Recommendations / Example: Cause Analysis/● No Training  ● No Monitoring
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.1 Auditor Recommendations and Management Action Plans / 5.1.1 Attributes of Findings and Recommendations / Example: Inaccurate Inventory Effect/● Inaccurate inventory
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.1 Auditor Recommendations and Management Action Plans / 5.1.1 Attributes of Findings and Recommendations / Example: Supply Department Improvements Recommendation/● Update Records  ● Job Instructions  ● Monitor Process
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.1 Auditor Recommendations and Management Action Plans / 5.1.1 Attributes of Findings and Recommendations / Example: Finding Closure/● Action Taken  ● Spot Checks  ● Finding Closed
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.1 Auditor Recommendations and Management Action Plans / 5.1.2 Root Cause Analysis / Root Cause Analysis To maximize the value of internal audit/● Add Value  ● Find Root
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.1 Auditor Recommendations and Management Action Plans / 5.1.2 Root Cause Analysis / Root Cause Analysis to making effective recommendations/● Understand 'Why'  ● Investigate Causes  ● Broad Impact
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.1 Auditor Recommendations and Management Action Plans / 5.1.2 Root Cause Analysis / Root Cause Analysis to add insights/● Improve Governance  ● Resource Consideration
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.1 Auditor Recommendations and Management Action Plans / 5.1.2 Root Cause Analysis / Root Cause Analysis Example/● The Audit Finding  ● The Proximate Cause  ● The Ultimate Root Cause
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.1 Auditor Recommendations and Management Action Plans / 5.1.2 Root Cause Analysis / Cost-Benefit Analysis of Management Responses/● Consider costs/benefits  ● Ignore if costly
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.1 Auditor Recommendations and Management Action Plans / 5.1.2 Root Cause Analysis / Response Costs Direct Indirect Opportunity/● Response Costs  ● Design Implement Maintain  ● Opportunity Costs
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.1 Auditor Recommendations and Management Action Plans / 5.1.2 Root Cause Analysis / Quantitatively or Qualitatively/● Measure Costs/Benefits  ● Marginal Analysis  ● Nonquantitative Factors
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.1 Auditor Recommendations and Management Action Plans / 5.1.2 Root Cause Analysis / Cost-Benefit Analysis in Risk Response/● Balance costs/benefits  ● Initial and ongoing  ● Measure costs/benefits
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.1 Auditor Recommendations and Management Action Plans / 5.1.3 Management’s Review and Response / Draft Report Review with Operational Management/● Courtesy Review  ● Reduce Disagreements  ● Eliminate Surprises
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.1 Auditor Recommendations and Management Action Plans / 5.1.3 Management’s Review and Response / Auditor Flexibility versus Integrity/● Auditor Flexibility  ● Conclusion Integrity
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.1 Auditor Recommendations and Management Action Plans / 5.1.3 Management’s Review and Response / Disagreement Handling in Audit Reports/● Potential disagreements  ● Note disagreements  ● State positions
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.1 Auditor Recommendations and Management Action Plans / 5.1.3 Management’s Review and Response / Auditor Recommendations and Management Agreement/● Methodology Needed  ● Audit Charter
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.1 Auditor Recommendations and Management Action Plans / 5.1.3 Management’s Review and Response / CAE Concerns About Organizational Risks/● Disagreement Risks  ● Share Concerns  ● Types of Risks
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.1 Auditor Recommendations and Management Action Plans / 5.1.3 Management’s Review and Response / Management Response to Significant Findings/● Management Response  ● Assume Risk  ● Inform the Board
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.1 Auditor Recommendations and Management Action Plans / 5.1.3 Management’s Review and Response / CAE Disagreement with Management Risk Acceptance/● Discuss Management  ● Understand Decision  ● Identify Cause  ● Determine Authority  ● Resolve Disagreement
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.1 Auditor Recommendations and Management Action Plans / 5.1.3 Management’s Review and Response / CAE Disagreement and Escalation Process/● Escalate disagreement  ● Joint presentation  ● Discuss with external
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.1 Auditor Recommendations and Management Action Plans / 5.1.3 Management’s Review and Response / CAE Sharing Report with Senior Management/● CAE Discussion
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.1 Auditor Recommendations and Management Action Plans / 5.1.3 Management’s Review and Response / CAE Reporting on Internal Control/● CAE Reporting
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / Risks Defined/● Risks Defined
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / Auditor's Role in Risk Assessment/● Assess risk  ● Critical problems  ● Align goals  ● Protect assets
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / Engagement Risk Assessment/● Understand Risk  ● Identify Risks  ● Evaluate & Prioritize
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / Risk Assessment Identifying Analyzing Evaluating/● Assess risks  ● Find risks  ● Analyze risks  ● Evaluate risks
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / Effective Risk Assessment/● Identify Risks  ● Manage Risks  ● Consider Changes
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / Risk Rating Scale/● Rating Scale  ● Strong  ● Satisfactory  ● Unsatisfactory  ● Critical
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / Data Analytics for Audit Findings/● Aggregate Findings  ● Prioritize Critical Findings  ● Focus on Materiality  ● Maximize Resources  ● Increase Productivity
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2.1 Organizational Objectives / Objectives Precondition To Risk ID/● Objectives clear
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2.1 Organizational Objectives / Risk treatment/● Risk Treatment  ● Residual Risk  ● Inherent Risk
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2.1 Organizational Objectives / Monitoring and Review /● Ongoing monitoring  ● Improve effectiveness
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2.1 Organizational Objectives / Recording and Reporting/● Record & Report  ● Support Decisions  ● Enhance Communication
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2.2 Responsibilities for Risk Management / Board Oversight of Risk Management/● Overseeing risk  ● Ensure managed
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2.2 Responsibilities for Risk Management / Management's Role in Risk Attitude and Management/● Risk Attitude  ● Manage Risks  ● ISO Definition
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2.2 Responsibilities for Risk Management / Internal Audit Function Assurance Role/● Assurance Role
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2.3 Risk Management Process / Management's Risk Focus/● Risk Focus  ● Consider All Risks
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2.3 Risk Management Process / CAE Assessing Risk Appetite and Tolerance/● Understand Risk  ● Risk Willingness  ● Acceptable Variation
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2.3 Risk Management Process / Risk Appetite Tolerance and Attitude/● MEEN Furniture  ● Invest $100M
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2.3 Risk Management Process / Risk Appetite/● New Initiative Risks  ● High Risk Appetite
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2.3 Risk Management Process / Risk Tolerance 1/● Acceptable Loss  ● Manage Exposure  ● Mitigation Methods
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2.3 Risk Management Process / Risk Tolerance 2/● Operational Limit  ● A Trigger for Action  ● Managing the Risk
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2.3 Risk Management Process / Risk Attitude/● Tech Risk-Seeking  ● Cyber Risk-Averse  ● Attitude Defines
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2.3 Risk Management Process / Understanding Management's Risk Appetite and Tolerance/● Risk Policy  ● Observe Process  ● Monitor Actions  ● ERM Involvement  ● Discuss Risk
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2.3 Risk Management Process / CAE Assessing Residual Risk Acceptability/● CAE: Residual Risk
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2.3 Risk Management Process / CAE Recognizing Potential Risks/● High-Risk Issues  ● Build Relationships
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2.3 Risk Management Process / Risks Beyond Organization's Tolerance/● Reputation harm  ● Harm to people  ● Regulatory penalties  ● Misstatements  ● Illegal acts  ● Strategic impediments
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2.3 Risk Management Process / CAE Reviews Risk Assessments and Processes/● Review Risk  ● Understand Acceptability  ● Evaluate Duties
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2.3 Risk Management Process / Internal Audit Risk Assessments and Alignment/● Audit Risk Assessment  ● Risk Response Alignment
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2.3 Risk Management Process / Step 1 Identification of Context/● Significant contexts  ● Laws and Regulations  ● Capital Projects  ● Business Processes  ● Supporting Technology  ● Organizational Structure  ● External Market Risks
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2.3 Risk Management Process / Step 2 Risk Identification/● Every Levels  ● Unit Impact  ● Past & Future  ● Identification Methods
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2.3 Risk Management Process / Step 3 Risk Assessment and Prioritization/● Formal/Informal  ● Three-Part Assessment   1. Risk Significance   2. Risk Likelihood   3. Risk Management  ● Prioritize Risks  ● Qualitative /Quantitative
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2.3 Risk Management Process / Step 4 Risk Response/● Risk Responses  ● Match Appetite  ● Manage Risk  ● Risk Remaining  ● Controls Fail
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2.3 Risk Management Process / Step 5 Risk Monitoring/● Continuous process   1. Track Identified Risks   2. Evaluate Response Plans   3. Monitor Residual Risk   4. Identify New Risks  ● Information sources  ● Managers bias  ● Auditor objectivity
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2.4 Rank and Validate Risk Priorities / Risk Prioritization Significance Factors/● Prioritize Significance  ● Magnitude and Probability  ● Nature and Relevance  ● Potential Effects
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2.4 Rank and Validate Risk Priorities / Risk Significance Heat Map/● Risk Significance  ● Visual Display
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2.4 Rank and Validate Risk Priorities / Risk Modeling for Audit Engagements/● Rank risks
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2.4 Rank and Validate Risk Priorities / Risk Factors Weighting Significance/● Weight Risk Factors
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2.4 Rank and Validate Risk Priorities / Risk Map Review Example 1/● Risk Maps
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2.4 Rank and Validate Risk Priorities / Risk Map Review Example 2/Risk Map  ● Risk A - IMPACT: Critical - LIKELIHOOD: Remote  ● Risk B - IMPACT: Major - LIKELIHOOD: Possible  ● Risk C - IMPACT: Critical - LIKELIHOOD: Possible  ● Risk D - IMPACT: Critical - LIKELIHOOD: Likely
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2.4 Rank and Validate Risk Priorities / Risk Map Review Example 3/● Risk A - IMPACT: High - PROBABILITY: 0% => Medium Risk  ● Risk B - IMPACT: Medium - PROBABILITY: 55% => High-Catastrophic Risk  ● Risk C - IMPACT: High - PROBABILITY: 45% => Medium Risk  ● Risk D - IMPACT: High - PROBABILITY: 100% => High-Catastrophic Risk  
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2.4 Rank and Validate Risk Priorities / Risk Map Review Example 4/● Analyze Resources  ● Risk D > Risk C  ● Risk C > Risk A
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2.4 Rank and Validate Risk Priorities / Risk Map Review Example 5/● Judgment Needed  ● Likely Threat  ● Greater Impact
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2.5 Methodologies to Assess Existing Controls and Risks / Assessing Controls for Residual Risk/● Check Controls
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2.5 Methodologies to Assess Existing Controls and Risks / Risk and Control Matrix/● Identify risks/controls  ● Connect elements
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2.5 Methodologies to Assess Existing Controls and Risks / Controls Mitigate Risks/● Reduce risks
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2.5 Methodologies to Assess Existing Controls and Risks / Adequacy of Controls/● Evaluate controls  ● Adequate controls
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2.5 Methodologies to Assess Existing Controls and Risks / Effectiveness of Controls/● Evaluate Controls  ● Assess Risks
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2.5 Methodologies to Assess Existing Controls and Risks / Efficiency of Controls/● Evaluate efficiency  ● Monitor costs/benefits  ● Control level
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2.5 Methodologies to Assess Existing Controls and Risks / Assessing Control Effectiveness Rating Scale/● Rating Scale  ● Satisfactory  ● Partially Satisfactory  ● Needs Improvement  ● Unsatisfactory 
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2.5 Methodologies to Assess Existing Controls and Risks / Aggregating Engagement Findings and Overall Significance/● Summarize Results vs Objectives  ● Judge Overall Significance  ● Assess GRC Effectiveness
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2.5 Methodologies to Assess Existing Controls and Risks / CAEs Role Assessing Accepted Risk Level/● CAE judgment
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2.6 Use of a Control Matrix / Controls and Risks (do not necessarily) One-to-One Relationship/● Risks vs Controls  ● Controls, Multiple Risks  ● Multiple Controls, Risk
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2.6 Use of a Control Matrix / Petty Cash Control Matrix Examples 1/● Vouchers needed  ● Maintain level  ● Review spend
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2.6 Use of a Control Matrix / Petty Cash Control Matrix Examples 2/● R1: Cash Level  ● R2: Secure Fund  ● R3: Support Missing  ● R4: Fund Empty  ● R5: Spending Review
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2.6 Use of a Control Matrix / Petty Cash Control Matrix Examples 3/● CA: Account Limits  ● CB: Locked Safe  ● CC: Disbursement Receipts  ● CD: Purchase Receipts
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.2 Chief Audit Executive’s Responsibility for Assessing Residual Risk for the Engagement / 5.2.6 Use of a Control Matrix / Petty Cash Control Matrix Examples 4/● Risk Control Link  ● Risk 1: A, B  ● Risk 2: B  ● Risk 3: C, D  ● Risk 4: A, B  ● Risk 5: C, D
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.3 Monitoring and Confirming the Implementation of Management Action Plans / 5.3 Monitoring and Confirming the Implementation of Management Action Plans / Follow-Up on Audit Recommendations/● Follow-Up Importance  ● Monitoring Status  ● Escalation Process
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.3 Monitoring and Confirming the Implementation of Management Action Plans / 5.3 Monitoring and Confirming the Implementation of Management Action Plans / CAE Follow-Up and Action Plan Implementation/● Follow-up Process  ● Standard 15.2 Confirming the Implementation of Recommendations or Action Plans
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.3 Monitoring and Confirming the Implementation of Management Action Plans / 5.3 Monitoring and Confirming the Implementation of Management Action Plans / Confirming Implementation of Action Plans/● Confirm Implementation  ● Inquire Progress  ● Risk-Based Follow-up Assessment  ● Update Tracking  ● Significance Matters
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.3 Monitoring and Confirming the Implementation of Management Action Plans / 5.3 Monitoring and Confirming the Implementation of Management Action Plans / Monitoring vs Follow-Up in Internal Audit/● Monitoring vs Follow-up  ● Audit Monitoring System  ● Confirm Adequacy  ● Define Responsibility
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.3 Monitoring and Confirming the Implementation of Management Action Plans / 5.3 Monitoring and Confirming the Implementation of Management Action Plans / CAE Monitoring Management Action Plans/● Info Requirements  ● Collaboration Benefit  ● Defining the Monitoring Process  ● Confirming Corrective Actions  ● Reporting Follow-Up Results
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.3 Monitoring and Confirming the Implementation of Management Action Plans / 5.3 Monitoring and Confirming the Implementation of Management Action Plans / Tracking Findings and Corrective Actions/● Various Tools  ● Tool Requirements  ● The Finding and Action  ● Responsibility and Timeline  ● Status and Verification
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.3 Monitoring and Confirming the Implementation of Management Action Plans / 5.3 Monitoring and Confirming the Implementation of Management Action Plans / Action Plan Implementation Follow-Up Assessments/● Specify Follow-up
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.3 Monitoring and Confirming the Implementation of Management Action Plans / 5.3.1 Escalation Process / Escalation Process for Audit Findings/● Escalate Findings  ● Structured Plan  ● Charter, Operations Manual
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.3 Monitoring and Confirming the Implementation of Management Action Plans / 5.3.1 Escalation Process / CAE Addressing Findings with Management/● Escalation Protocol  ● Share Concerns
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.3 Monitoring and Confirming the Implementation of Management Action Plans / 5.3.1 Escalation Process / Document Management Explanations for Action Delays/● Document explanation
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.3 Monitoring and Confirming the Implementation of Management Action Plans / 5.3.1 Escalation Process / Internal Audit Escalation Process/● Escalation Measures  ● Escalation Levels  ● Communication Methods  ● Time Period
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.3 Monitoring and Confirming the Implementation of Management Action Plans / 5.3.1 Escalation Process / Escalation Process Steps/● Discuss finding  ● Management Plan  ● IA Follow-up  ● Escalate Levels
Section D. Engagement Results and Monitoring (45%)/SU5: Action Plans/5.3 Monitoring and Confirming the Implementation of Management Action Plans / 5.3.1 Escalation Process / Unresolved Findings and Internal Audit Reports/● Unresolved Finding  ● Audit Report  ● Stakeholder Distribution
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.0 Study Unit Six Engagement Results and Monitoring: Communication -- learning objectives / 6.0 Study Unit Six Engagement Results and Monitoring: Communication -- learning objectives / Engagement Results Communication Learning Objectives/● Effective attributes  ● Demonstrate communication  ● Closing process  ● Communicate unacceptable risk
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.0 Study Unit Six Engagement Results and Monitoring: Communication -- learning objectives / 6.0 Study Unit Six Engagement Results and Monitoring: Communication -- learning objectives / Engagement Results Communication Essentials 1/● Effective Communication  ● Communication Standards  ● Communicate Weaknesses  ● Provide Recommendations  ● Deliver Communications
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.0 Study Unit Six Engagement Results and Monitoring: Communication -- learning objectives / 6.0 Study Unit Six Engagement Results and Monitoring: Communication -- learning objectives / Engagement Results Communication Essentials 2/● Audit Communication  ● Share Findings  ● Communicate Risk  ● Driving Organizational Improvement
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1 Effective Communication of Engagement Results / Effective Engagement Communication/● Share Findings  ● Inform & Persuade  ● Clear Reports  ● Build Relationships  ● Improve Processes  ● Add Value
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.1 Engagement Communications / Engagement Communication Purpose/● Inform Findings  ● Persuade Management  ● Get Results
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.1 Engagement Communications / Engagement Communication Expectations and Needs/● Meet Expectations  ● Senior Management  ● Operating Management  ● Communicate Always
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.1 Engagement Communications / Effective Communication of Engagement Results/● Communication Skills
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.1 Engagement Communications / Effective Communication by the CAE/● CAE Communication  ● Help Audit Team
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.2 Characteristics of Effective Communication / Effective Communication Characteristics/● Message Received  ● Standard 11.2 Effective Communication
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.2 Characteristics of Effective Communication / Standard 11.2 Effective Communication Requirements/● Methodologies Implementation
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.2 Characteristics of Effective Communication / Applicable to All Stages/● Audit Stages
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.2 Characteristics of Effective Communication / Accurate/● Precise wording  ● Error-free, truthful
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.2 Characteristics of Effective Communication / Objective/● Unbiased attitude  ● Impartial assessment
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.2 Characteristics of Effective Communication / Clear/● Easy language  ● Define terms  ● Include details
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.2 Characteristics of Effective Communication / Concise/● Exclude Irrelevant Info  ● Succinct Messages  ● Simple Sentences
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.2 Characteristics of Effective Communication / Constructive/● Severity & Solutions  ● Cooperative Tone
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.2 Characteristics of Effective Communication / Complete/● Same conclusion  ● Relevant & Reliable
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.2 Characteristics of Effective Communication / Timely/● Planning Deadlines  ● Significance Matters  ● Varies by engagement
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.2 Characteristics of Effective Communication / Communication Attributes Conflicts and Professional Judgment/● Recognize Conflicts  ● Concise vs Clear  ● Complete vs Concise  ● Timely vs Clear
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.2 Characteristics of Effective Communication / Helpful Tools for Effective Communication/● Style Guides  ● Skills Training  ● Slide Guidelines  ● Software Tools  ● Reviews Improve
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.3 Interim Engagement Communication / Interim Engagement Communication Defined/● Ongoing Communication  ● Before Final
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.3 Interim Engagement Communication / Interim Communication Purpose and Use/● Professional Courtesy  ● Immediate Items  ● Scope Updates  ● Progress Updates
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.3 Interim Engagement Communication / Interim Report Details/● Report Types  ● Weekly Example  ● Report Distribution
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.3 Interim Engagement Communication / Interim Reports Review Process/● Report Review  ● Indicate Preliminary
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.3 Interim Engagement Communication / Interim Reporting Still Requires Final Report/● Final report needed
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.4 Errors and Omissions / Audit Report Errors and Omissions/● Report Errors  ● Standard 11.4 Errors and Omissions
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.4 Errors and Omissions / Standard 11.4 Errors and Omissions/● Corrected Info  ● Agreed Criteria
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.4 Errors and Omissions / Defining Significant Errors and Omissions 1/● Legal Regulatory  ● Change Findings
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.4 Errors and Omissions / Defining Significant Errors and Omissions 2/● Understand Expectations  ● Results  ● Severity  ● Conclusion  ● Action
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.4 Errors and Omissions / Defining Significant Errors and Omissions 3/● CAE Conclusion
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.5 Process to Correct Errors and Omissions / Error Root Cause Analysis/● Find Cause  ● Report if Needed
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.5 Process to Correct Errors and Omissions / Correcting Errors Protects Audit Integrity/● Best communication  ● Protects audit
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.5 Process to Correct Errors and Omissions / Errors and Omissions Consequences/● Recognize Consequences  ● Loss in credibility  ● Inaccurate decision making   ● Increased risk exposure  ● Regulatory noncompliance  ● Financial issues
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.5 Process to Correct Errors and Omissions / CAE Minimizing Errors and Omissions/● Quality Control  ● Report Templates  ● Risk-Based Audit  ● Recordkeeping Policies  ● Staff Education  ● Risk Framework
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.6 Communicating Results Effectively / Internal Audit Services Communication 1/● Clear Understanding  ● Standard Template
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.6 Communicating Results Effectively / Internal Audit Services Communication 2/● Understand Expectations  ● Communication plan  ● CAE communication
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.6 Communicating Results Effectively / Standard 11.3 Communicating Results Requirements 1/● Standard 11.3 Communicating Results
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.6 Communicating Results Effectively / Standard 11.3 Communicating Results Requirements 2/● Communicate Results  ● Understand Expectations  ● Engagement-Level Conclusions  ● Cross-Cutting Themes  ● Organizational-Level Conclusions
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.6 Communicating Results Effectively / Positive Feedback for Operational Management/● Give Feedback  ● Build Relations  ● Fair Presentation  ● Show Improvements
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.6 Communicating Results Effectively / Client Feedback/● Client Feedback  ● Audit Accountability
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.7 Final Engagement Communication / Standard 15.1 Final Engagement Communication/● Final Communication
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.7 Final Engagement Communication / Standard 15.1 Final Engagement Communication Requirements/● Final Communication  ● Assurance Findings  ● Scope Limitations  ● GRC Conclusion  ● Responsible Parties
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.7 Final Engagement Communication / Final Engagement Communication Key Elements/● Audit Report  ● Objectives Scope Results  ● Conclusions Recommendations Plans
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.7 Final Engagement Communication / Providing Conclusion for each Engagement /● Conclude for each engagement  ● Basis for Conclusion  ● Formats for Conclusion
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.7 Final Engagement Communication / Final Engagement Reports Approval/● CAE Approval  ● Before Issuance
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.7 Final Engagement Communication / Final Communication Format and Content/● Format and Content Varies
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.7 Final Engagement Communication / Internal Audit Report Structure 1/● Report Title  ● Objective  ● Scope  ● Background  ● Recognition
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.7 Final Engagement Communication / Internal Audit Report Structure 2/● Rating  ● Conclusions  ● Findings   ■ Identification and Rating   ■ Statement of Facts   ■ Recommendations and Action Plans  ● Distribution List
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.7 Final Engagement Communication / Executive Summary/● Executive Summary  ● Detailed Findings
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.7 Final Engagement Communication / Global Standards Conformance Statement/● Standards Conformance
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.7 Final Engagement Communication / CAE Involvement in Final Report/● Small org  ● Large org
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.7 Final Engagement Communication / CAE Approval of Final Reports/● CAE Approval  ● Approval Methods  ● Written Preference  ● Oral Support
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.8 Engagement Conclusions / Standard 14.5 Engagement Conclusions/● Standard 14.5 Engagement Conclusions  ● Satisfactory or Unsatisfactory
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.8 Engagement Conclusions / Standard 14.5 Engagement Conclusions Requirements/● Results Summary  ● Overall Significance  ● Assurance Engagement
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.8 Engagement Conclusions / Internal Audit Services Results Versus Engagement Conclusions/● A High-Level Conclusion  ● Built from Engagement Conclusions  ● Includes Themes and Opinions
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.8 Engagement Conclusions / Engagement Conclusion and Scope Limitations/● No conclusion  ● Scope limit
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.8 Engagement Conclusions / Scope Limitation Defined/● Audit Restriction  ● Scope in Charter  ● Access  ● Schedule  ● Procedures  ● Budget
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.8 Engagement Conclusions / Reporting Scope Limitations/● Explain Limitations  ● Scope Limitations  ● Examples of Limits
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.8 Engagement Conclusions / The results of internal audit services and Scope statement/● IA Services Results  ● Scope Context
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.1 Effective Communication of Engagement Results / 6.1.8 Engagement Conclusions / Scope Limitation Communication/● Inventory Access Denied  ● Communicate Limitation  ● Clear Results
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.2 Engagement Closing Communication and Reporting Process / 6.2 Engagement Closing Communication and Reporting Process / Managing Audit Engagement Communications/● Manage Communication  ● Exit Conferences  ● Engagement Comms  ● Handle Information  ● Contribute Expertise
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.2 Engagement Closing Communication and Reporting Process / 6.2.1 Exit Conferences / Exit Conferences/● Exit Conference  ● Discuss Findings  ● Agenda & Minutes  ● Resolve Issues  ● Report Details  ● Positive Aspects  ● CAE Approval
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.2 Engagement Closing Communication and Reporting Process / 6.2.1 Exit Conferences / Discussion of Findings/● Discuss Findings  ● During engagement or At exit conference  ● Lead Discussions
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.2 Engagement Closing Communication and Reporting Process / 6.2.1 Exit Conferences / Audit Results/● Validate results  ● Improve relations  ● Discuss responses  ● Obtain Feedback
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.2 Engagement Closing Communication and Reporting Process / 6.2.1 Exit Conferences / Discussing Disagreements/● Discuss Differences  ● Reach Agreement
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.2 Engagement Closing Communication and Reporting Process / 6.2.1 Exit Conferences / Documenting the Exit Conference/● Document Exit
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.2 Engagement Closing Communication and Reporting Process / 6.2.1 Exit Conferences / Reporting Resolved Findings/● Corrective Actions  ● Residual Risks  ● Report Resolution
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.2 Engagement Closing Communication and Reporting Process / 6.2.1 Exit Conferences / CAE's Responsibility/● CAE Responsibility  ● CAE Review/Approval
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.2 Engagement Closing Communication and Reporting Process / 6.2.1 Exit Conferences / Report Distribution/● Validate Distribution  ● Delegate Responsibility
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.2 Engagement Closing Communication and Reporting Process / 6.2.2 Engagement Communications / CAE's Role in Engagement Communications/● CAE knowledge
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.2 Engagement Closing Communication and Reporting Process / 6.2.2 Engagement Communications / Identifying Engagement Communication Recipients/● Business Need  ● Managers  ● Senior managers
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.2 Engagement Closing Communication and Reporting Process / 6.2.2 Engagement Communications / Permanent Entries in Distribution List/● Senior Managers  ● External Auditors
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.2 Engagement Closing Communication and Reporting Process / 6.2.2 Engagement Communications / Standard Distribution List/● Core Distribution List  ● Management-Specific Distribution
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.2 Engagement Closing Communication and Reporting Process / 6.2.2 Engagement Communications / Format and Content/● Communication format  ● Report detail  ● Executive summaries
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.2 Engagement Closing Communication and Reporting Process / 6.2.2 Engagement Communications / CAE's Role in Final Report Preparation/● Small org  ● Large org
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.2 Engagement Closing Communication and Reporting Process / 6.2.2 Engagement Communications / Communicating Significant Issues in Advisory Engagements/● Significant Issues
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.2 Engagement Closing Communication and Reporting Process / 6.2.3 Sensitive Information / Communicating Sensitive Information/● Sensitive Information  ● Communicate findings  ● Chain of command  ● Report to Board
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.2 Engagement Closing Communication and Reporting Process / 6.2.3 Sensitive Information / Whistleblowing/● Outside the Chain of command  ● Act internally  ● Act outside the organization  ● Elects Internal  ● External Decision
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.2 Engagement Closing Communication and Reporting Process / 6.2.3 Sensitive Information / Reporting Illegal or Unethical Acts/● Report Acts  ● Know Laws
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.2 Engagement Closing Communication and Reporting Process / 6.2.3 Sensitive Information / Standards of Ethics and Professionalism/● IIA Standards  ● Assess Evidence  ● Confidentiality Duty
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.2 Engagement Closing Communication and Reporting Process / 6.2.4 Communications Outside the Organization / External Communication CAE Considerations/● Consider consequences  ● Consequenses include
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.2 Engagement Closing Communication and Reporting Process / 6.2.4 Communications Outside the Organization / Example Whistleblowing/● Fraud Discovery  ● Report Internally  ● Doubt? External
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.3 Communicating Risk Acceptance That May Be Unacceptable to the Organization / 6.3 Communicating Risk Acceptance That May Be Unacceptable to the Organization / Communicating Acceptance of Excessive Risk/● Communicate Risk  ● Risk Consequences  ● Auditor *Must* Identify  ● Risk Evaluation  ● Auditor Responsibility
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.3 Communicating Risk Acceptance That May Be Unacceptable to the Organization / 6.3.1 Acceptance of Excessive Risk / Communicating Unacceptable Risk Acceptance/● Discuss Risk  ● Escalate Issue
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.3 Communicating Risk Acceptance That May Be Unacceptable to the Organization / 6.3.1 Acceptance of Excessive Risk / Standard 11.5 Communicating the Acceptance of Risks Requirements/● Communicate Risks  ● Discuss Risk  ● Escalate Issue  ● Not Responsible
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.3 Communicating Risk Acceptance That May Be Unacceptable to the Organization / 6.3.1 Acceptance of Excessive Risk / Unacceptable Risk Acceptance Defined/● Exceeding Risk Tolerance  ● Ineffective Risk Mitigation
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.3 Communicating Risk Acceptance That May Be Unacceptable to the Organization / 6.3.1 Acceptance of Excessive Risk / CAE Role in Excessive Risk Acceptance/● High-Risk Findings  ● Effective Tools  ● Risk Matrix and Categorization  ● SWOT Analysis  ● Advanced and External Methods
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.3 Communicating Risk Acceptance That May Be Unacceptable to the Organization / 6.3.1 Acceptance of Excessive Risk / Communicating Unacceptable Risk to Management/● Report High Risk  ● Agree Solution  ● Communicate Board
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.3 Communicating Risk Acceptance That May Be Unacceptable to the Organization / 6.3.1 Acceptance of Excessive Risk / Unacceptable Risk Tolerance Levels/● Reputation Damage  ● Harm People  ● Regulatory Penalties  ● Misstatements Material  ● Illegal Acts  ● Impede Objectives
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.3 Communicating Risk Acceptance That May Be Unacceptable to the Organization / 6.3.2 Communication Methodology / Agreement with the Board/● Agreement Methodologies
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.3 Communicating Risk Acceptance That May Be Unacceptable to the Organization / 6.3.2 Communication Methodology / Certain Specifications/● Timely Communication  ● Reporting Order  ● Legal Consultation
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.3 Communicating Risk Acceptance That May Be Unacceptable to the Organization / 6.3.2 Communication Methodology / Exercise Judgement/● CAE Judgement
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.3 Communicating Risk Acceptance That May Be Unacceptable to the Organization / 6.3.2 Communication Methodology / Documenting Discussions with Operational Management/● Document Discussions  ● Discussion Date  ● Risk Description  ● Management Reasons  ● Responsible Manager
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.3 Communicating Risk Acceptance That May Be Unacceptable to the Organization / 6.3.2 Communication Methodology / Documenting Meetings with Senior Management and Board /● Document Meetings  ● Date of the meeting and Minutes
Section D. Engagement Results and Monitoring (45%)/SU6: Communication/6.3 Communicating Risk Acceptance That May Be Unacceptable to the Organization / 6.3.2 Communication Methodology / CAE and Board, Management Roles/● CAE: Not resolving risk  ● Board and Management: Address Unacceptable risk
`;    /* --- PHẦN 2: THIẾT LẬP VÀ CÁC BIẾN TOÀN CỤC --- */    const nodeMap = {};    const svg = document.getElementById('mindmap-svg');    const container = document.getElementById('mindmap-container');    let zoom = 0.6; let panX = 0; let panY = 0;    let isPanning = false; let panStart = { x: 0, y: 0 };    let mainGroup;    const COLORS = ['#5a67d8', '#9f7aea', '#38a169', '#ed8936', '#4299e1', '#e53e3e', '#38b2ac', '#d53f8c'];    /* --- PHẦN 3: CÁC HÀM TIỆN ÍCH VÀ XỬ LÝ DỮ LIỆU --- */    function precalculateSizes(node) {        const fontSize = (node.depth === 0) ? 18 : Math.max(14 - node.depth, 10);        const fontWeight = (node.depth === 0) ? 'bold' : '500';        const maxWidth = 350 - node.depth * 25;        const temp = document.createElement('div');        Object.assign(temp.style, {            position: 'absolute', visibility: 'hidden', whiteSpace: 'normal',            wordWrap: 'break-word', fontSize: `${fontSize}px`, fontWeight: fontWeight,            lineHeight: '1.35', padding: '8px', width: `${maxWidth}px`,        });        temp.textContent = node.name;        document.body.appendChild(temp);        node.width = temp.clientWidth + 16;        node.height = temp.clientHeight + 16;        document.body.removeChild(temp);        Object.values(node.children).forEach(precalculateSizes);    }    function parseData(data) {        const lines = data.trim().split('\n').filter(Boolean);        const root = {            name: 'CIA3 -- Internal Audit Function', id: 'node-root', children: {}, isExpanded: true,            depth: 0, x: 0, y: 0, parentId: null        };        nodeMap[root.id] = root;        lines.forEach(line => {            const parts = line.split('/').map(p => p.trim());            let current = root;            let pathSoFar = 'CIA3 -- Internal Audit Function';            parts.forEach((part, i) => {                pathSoFar += `/${part}`;                const nodeId = `node-${pathSoFar.replace(/[^a-zA-Z0-9]/g, '')}`;                if (!current.children[nodeId]) {                    const nodeData = {                        name: part, id: nodeId, children: {}, isExpanded: false,                        depth: i + 1, parentId: current.id, x: 0, y: 0                    };                    current.children[nodeId] = nodeData;                    nodeMap[nodeId] = nodeData;                }                current = current.children[nodeId];            });        });        precalculateSizes(root);        return root;    }    /* --- PHẦN 4: THUẬT TOÁN LAYOUT VÀ VẼ --- */        function calculateLayout(rootNode) {        const HORIZONTAL_SPACING = 400;         const VERTICAL_SPACING = 20;        function calculateSubtreeHeight(node) {            if (!node.isExpanded || Object.keys(node.children).length === 0) {                node.subtreeHeight = node.height;                return;            }            let totalHeight = 0;            const children = Object.values(node.children);            children.forEach(child => {                calculateSubtreeHeight(child);                totalHeight += child.subtreeHeight;            });            totalHeight += (children.length - 1) * VERTICAL_SPACING;            node.subtreeHeight = Math.max(node.height, totalHeight);        }        function assignPositions(node, depth, yPos) {            node.x = depth * HORIZONTAL_SPACING;            node.y = yPos;            if (node.isExpanded && Object.keys(node.children).length > 0) {                const children = Object.values(node.children);                const childrenBlockHeight = (children.reduce((sum, child) => sum + child.subtreeHeight, 0)) + (children.length - 1) * VERTICAL_SPACING;                                let currentY = yPos - (childrenBlockHeight / 2);                children.forEach(child => {                    const childYCenter = currentY + (child.subtreeHeight / 2);                    assignPositions(child, depth + 1, childYCenter);                    currentY += child.subtreeHeight + VERTICAL_SPACING;                });            }        }        calculateSubtreeHeight(rootNode);        assignPositions(rootNode, 0, 0);    }    function drawMindmap(data) {        svg.innerHTML = '';        mainGroup = document.createElementNS("http://www.w3.org/2000/svg", "g");        mainGroup.id = 'pannable-zoomable-group';                const linksGroup = document.createElementNS("http://www.w3.org/2000/svg", "g");        const nodesGroup = document.createElementNS("http://www.w3.org/2000/svg", "g");                calculateLayout(data);        function drawRecursive(node, colorIndex) {            const parent = nodeMap[node.parentId];            if (parent) {                const path = document.createElementNS("http://www.w3.org/2000/svg", "path");                                const startX = parent.x + parent.width / 2;                const startY = parent.y;                const endX = node.x - node.width / 2;                const endY = node.y;                const midX = (startX + endX) / 2;                                const d = `M ${startX} ${startY} C ${midX} ${startY}, ${midX} ${endY}, ${endX} ${endY}`;                                path.setAttribute('d', d);                path.setAttribute('stroke', COLORS[colorIndex % COLORS.length]);                path.setAttribute('stroke-width', Math.max(8 - node.depth * 1.5, 1.5));                path.setAttribute('opacity', 0.6);                path.classList.add('branch-line');                linksGroup.appendChild(path);            }            const g = document.createElementNS("http://www.w3.org/2000/svg", "g");            g.setAttribute('id', node.id);            g.classList.add('node');            if (node.depth === 0) g.classList.add('central');            if (Object.keys(node.children).length === 0) g.classList.add('is-leaf');            g.setAttribute('transform', `translate(${node.x - node.width / 2}, ${node.y - node.height / 2})`);            const rect = document.createElementNS("http://www.w3.org/2000/svg", "rect");            rect.setAttribute('width', node.width);            rect.setAttribute('height', node.height);            rect.setAttribute('fill', COLORS[colorIndex % COLORS.length]);            rect.setAttribute('stroke', `rgba(0,0,0,0.2)`);            rect.classList.add('node-rect');                        const foreignObject = document.createElementNS("http://www.w3.org/2000/svg", "foreignObject");            foreignObject.setAttribute('width', node.width);            foreignObject.setAttribute('height', node.height);            const fontSize = (node.depth === 0) ? 18 : Math.max(14 - node.depth, 10);            foreignObject.innerHTML = `<div class="node-text-wrapper" style="font-size: ${fontSize}px;">${node.name}</div>`;            foreignObject.classList.add('node-foreign-object');                        g.appendChild(rect);            g.appendChild(foreignObject);            nodesGroup.appendChild(g);            if (node.isExpanded) {                Object.values(node.children).forEach((child, i) => {                    const childColorIndex = (node.depth === 0) ? i : colorIndex;                    drawRecursive(child, childColorIndex);                });            }        }                drawRecursive(data, 0);        mainGroup.appendChild(linksGroup);        mainGroup.appendChild(nodesGroup);        svg.appendChild(mainGroup);        applyTransform();    }    /* --- PHẦN 5: XỬ LÝ TƯƠNG TÁC (PAN, ZOOM, CLICK) --- */    function applyTransform() {        if (mainGroup) mainGroup.setAttribute('transform', `translate(${panX}, ${panY}) scale(${zoom})`);    }    function collapseAllDescendants(node) {        Object.values(node.children).forEach(child => {            child.isExpanded = false;            collapseAllDescendants(child);        });    }    /**     * **THAY ĐỔI:** Cập nhật logic để chỉ cho phép một đường dẫn được mở rộng tại một thời điểm.     * Khi mở một node mới, tất cả các node khác sẽ bị đóng lại.     */    function toggleNode(nodeId) {        const node = nodeMap[nodeId];        if (!node || Object.keys(node.children).length === 0) return;        const isCurrentlyExpanded = node.isExpanded;        /* Nếu hành động là MỞ RỘNG node này */        if (!isCurrentlyExpanded) {            /* 1. Thu gọn tất cả các node khác trước. */            /* (Không thu gọn node gốc, vì nó luôn mở) */            for (const key in nodeMap) {                if (nodeMap[key].depth > 0) {                   nodeMap[key].isExpanded = false;                }            }            /* 2. Mở rộng node được nhấp vào. */            node.isExpanded = true;            /* 3. Đảm bảo tất cả các node cha của nó cũng được mở rộng để hiển thị đường dẫn. */            let current = nodeMap[node.parentId];            while(current) {                current.isExpanded = true;                current = nodeMap[current.parentId];            }        } else { /* Nếu hành động là THU GỌN node này */            node.isExpanded = false;            /* Thu gọn luôn tất cả các node con của nó. */            collapseAllDescendants(node);        }        drawMindmap(nodeMap['node-root']);        addEventListeners();    }        function addEventListeners() {        svg.querySelectorAll('.node:not(.is-leaf)').forEach(nodeEl => {            nodeEl.addEventListener('click', e => {                e.stopPropagation();                toggleNode(nodeEl.getAttribute('id'));            });        });    }    /* --- PHẦN 6: ĐIỂM KHỞI ĐỘNG VÀ CÁC SỰ KIỆN --- */    container.addEventListener('mousedown', e => {        isPanning = true;        panStart = { x: e.clientX - panX, y: e.clientY - panY };    });    container.addEventListener('mousemove', e => {        if (!isPanning) return;        panX = e.clientX - panStart.x;        panY = e.clientY - panStart.y;        applyTransform();    });    const endPan = () => isPanning = false;    container.addEventListener('mouseup', endPan);    container.addEventListener('mouseleave', endPan);    container.addEventListener('wheel', e => {        e.preventDefault();        const zoomIntensity = 0.1;        const wheel = e.deltaY < 0 ? 1 : -1;        const newZoom = Math.max(0.1, zoom + wheel * zoomIntensity * zoom);        const rect = container.getBoundingClientRect();        const mouseX = e.clientX - rect.left;        const mouseY = e.clientY - rect.top;        panX = mouseX - (mouseX - panX) * (newZoom / zoom);        panY = mouseY - (mouseY - panY) * (newZoom / zoom);        zoom = newZoom;        applyTransform();    });    window.addEventListener('DOMContentLoaded', () => {        try {            const data = parseData(rawData);            const rect = container.getBoundingClientRect();            panX = 150;             panY = rect.height / 2;            drawMindmap(data);            addEventListeners();        } catch (error) {            console.error('Error:', error);            container.innerHTML = `<p style="color: red; text-align: center; padding: 20px;">Error loading mind map: ${error.message}</p>`;        }    });    </script></body></html>
